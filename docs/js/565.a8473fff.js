"use strict";(self["webpackChunkgrow_curriculum"]=self["webpackChunkgrow_curriculum"]||[]).push([[565],{14332:function(l,n,i){i.d(n,{Z:function(){return m}});var t=i(66252),u=i(3577);const e={class:"highlighted"},r={class:"highlighted-word"};function s(l,n,i,s,a,_){return(0,t.wg)(),(0,t.iD)("div",e,[(0,t._)("p",r,(0,u.zw)(i.word),1)])}var a={props:{word:{type:String,required:!0}}},_=i(83744);const b=(0,_.Z)(a,[["render",s],["__scopeId","data-v-5f382e4a"]]);var m=b},57672:function(l,n,i){i.d(n,{Z:function(){return c}});var t=i(66252);const u={key:0,class:"spinner-container"},e=(0,t._)("h1",{class:"spinner-text"},"Loading...",-1),r=(0,t._)("div",{class:"spinner"},null,-1),s=[e,r];function a(l,n,i,e,r,a){return i.isLoading?((0,t.wg)(),(0,t.iD)("div",u,s)):(0,t.kq)("",!0)}var _={props:{isLoading:{type:Boolean,default:!1}}},b=i(83744);const m=(0,b.Z)(_,[["render",a]]);var c=m},87570:function(l,n,i){i.r(n),i.d(n,{default:function(){return ts}});var t=i(66252),u=i(3577),e=i(49963);const r=l=>((0,t.dD)("data-v-7c1e06ae"),l=l(),(0,t.Cn)(),l),s={class:"container"},a={class:"main-content"},_=r((()=>(0,t._)("p",null,"Gitのコマンド基本的な操作と考え方を学びましょう。",-1))),b=r((()=>(0,t._)("p",null,"まずはどういったものなのか図と照らし合わせながら覚えていきましょう！",-1))),m=r((()=>(0,t._)("p",null,[(0,t.Uk)(" 皆さんがこれから学ぶ「コマンドライン」について概要を理解しましょう!"),(0,t._)("br")],-1))),c=r((()=>(0,t._)("br",null,null,-1))),o=r((()=>(0,t._)("p",null,[(0,t.Uk)(" ・分散型バージョン管理システム。"),(0,t._)("br"),(0,t.Uk)(" コンピュータ上のファイルに発生した変更を記録し、履歴を管理してくれる便利なツールになります。 "),(0,t._)("br"),(0,t._)("br"),(0,t.Uk)(" ではGitというのは具体的にどのように使うものなのか深掘りしていきましょう! ")],-1))),g=r((()=>(0,t._)("br",null,null,-1))),p=r((()=>(0,t._)("p",null,[(0,t.Uk)(" 例えば、この様にフォルダの中に3つのファイルがあるとしましょう。"),(0,t._)("br"),(0,t._)("br"),(0,t.Uk)(" これらのファイルの作業を行うときすべてAさんという人だけで行うとするととても時間がかかってしまいます。"),(0,t._)("br"),(0,t.Uk)(" そのため、BさんやCさんなどを入れて分担作業して作業する方が効率的になります。"),(0,t._)("br"),(0,t._)("br"),(0,t.Uk)(" Gitはその管理をしやすくするツールだと覚えておきましょう。"),(0,t._)("br")],-1))),d=r((()=>(0,t._)("br",null,null,-1))),k=["src"],U=r((()=>(0,t._)("br",null,null,-1))),h=r((()=>(0,t._)("p",null,[(0,t.Uk)(" Gitを使えるように準備をしましょう。"),(0,t._)("br"),(0,t.Uk)(" まずはGitHubというサイトで新規登録を行いましょう。"),(0,t._)("br"),(0,t._)("br")],-1))),w=r((()=>(0,t._)("div",{class:"download"},[(0,t._)("a",{class:"download-link",href:"https://github.com/"},"GitHubで新規登録を行う"),(0,t._)("br"),(0,t._)("br"),(0,t._)("br"),(0,t._)("br")],-1))),f=r((()=>(0,t._)("p",null,[(0,t.Uk)(" 新規登録をおこなったら初期設定をしましょう。"),(0,t._)("br"),(0,t.Uk)(" このコマンドはGitHubアカウントを変えない限り変えることはなくほとんど変えることはないのでので覚えなくても大丈夫です。"),(0,t._)("br"),(0,t._)("br"),(0,t.Uk)(" ①"),(0,t._)("br"),(0,t.Uk)(" 「環境構築やインストール」でインストールした「git bash」を開きましょう。 開くとこのような画面になります。 ")],-1))),P=r((()=>(0,t._)("br",null,null,-1))),v=["src"],C=r((()=>(0,t._)("br",null,null,-1))),W=r((()=>(0,t._)("p",null,[(0,t.Uk)(" ②"),(0,t._)("br"),(0,t.Uk)(" 開いたらCドライブに移動しましょう。"),(0,t._)("br"),(0,t.Uk)(" 移動したらユーザー名とメールアドレスを設定しましょう。"),(0,t._)("br"),(0,t.Uk)(" 以下の画像のようにすべて入力して実行しましょう。"),(0,t._)("br"),(0,t._)("br")],-1))),M=["src"],T=r((()=>(0,t._)("br",null,null,-1))),G=r((()=>(0,t._)("p",null,[(0,t.Uk)(" 初期設定は以上で完了です。"),(0,t._)("br"),(0,t._)("br")],-1))),x=r((()=>(0,t._)("p",null,[(0,t._)("br"),(0,t.Uk)(" では今回Gitを学習するための練習フォルダとファイルを作成しましょう。"),(0,t._)("br"),(0,t._)("br"),(0,t.Uk)(" ③"),(0,t._)("br"),(0,t.Uk)(" Cドライブに以下のフォルダを作成してください。"),(0,t._)("br"),(0,t.Uk)(" 作成したらそのフォルダに移動してテキストファイルを作成しましょう。"),(0,t._)("br"),(0,t.Uk)(" エクスプローラで作成したフォルダの「git-practice」を確認すると以下のようにテキストファイルが作成されています。"),(0,t._)("br")],-1))),H=r((()=>(0,t._)("br",null,null,-1))),S=["src"],O=r((()=>(0,t._)("br",null,null,-1))),Z=["src"],L=r((()=>(0,t._)("br",null,null,-1))),y=r((()=>(0,t._)("br",null,null,-1))),I=r((()=>(0,t._)("br",null,null,-1))),D=r((()=>(0,t._)("br",null,null,-1))),F=r((()=>(0,t._)("br",null,null,-1))),K=r((()=>(0,t._)("br",null,null,-1))),R=r((()=>(0,t._)("br",null,null,-1))),z=r((()=>(0,t._)("br",null,null,-1))),B=r((()=>(0,t._)("br",null,null,-1))),q=r((()=>(0,t._)("br",null,null,-1))),A=r((()=>(0,t._)("br",null,null,-1))),N=r((()=>(0,t._)("br",null,null,-1))),j=r((()=>(0,t._)("br",null,null,-1))),E=["src"],J=r((()=>(0,t._)("br",null,null,-1))),Q=r((()=>(0,t._)("p",null,[(0,t.Uk)(" ④"),(0,t._)("br"),(0,t.Uk)(" それではコマンドを入力しましょう。"),(0,t._)("br"),(0,t.Uk)(" 以下のようになればOKです。"),(0,t._)("br"),(0,t._)("br")],-1))),V=["src"],X=r((()=>(0,t._)("br",null,null,-1))),Y=r((()=>(0,t._)("p",null,[(0,t.Uk)(" では自分のPC上で作成したファイルを他の人に共有できるようにウェブ上に共有場所を作成しましょう。"),(0,t._)("br"),(0,t._)("br"),(0,t.Uk)(" ⑤"),(0,t._)("br"),(0,t.Uk)(" 先ほど登録したGitHubを開きましょう。"),(0,t._)("br"),(0,t.Uk)(" その次に左にある「New」ボタンを押しましょう。"),(0,t._)("br"),(0,t._)("br")],-1))),$=["src"],ll=r((()=>(0,t._)("br",null,null,-1))),nl=r((()=>(0,t._)("p",null,[(0,t.Uk)(" ⑥"),(0,t._)("br"),(0,t.Uk)(" 次に「Repository name」に「git-practice」と入力しましょう。"),(0,t._)("br"),(0,t.Uk)(" 「Description」は入力しなくても大丈夫です。"),(0,t._)("br"),(0,t.Uk)(" リポジトリのタイプは「public」を選択しましょう。"),(0,t._)("br"),(0,t._)("br"),(0,t.Uk)(" 下の残りの設定はそのままで「Create repository」を押しましょう。"),(0,t._)("br"),(0,t._)("br")],-1))),il=["src"],tl=r((()=>(0,t._)("br",null,null,-1))),ul=r((()=>(0,t._)("br",null,null,-1))),el=r((()=>(0,t._)("br",null,null,-1))),rl=r((()=>(0,t._)("br",null,null,-1))),sl=r((()=>(0,t._)("br",null,null,-1))),al=r((()=>(0,t._)("br",null,null,-1))),_l=r((()=>(0,t._)("br",null,null,-1))),bl=["src"],ml=r((()=>(0,t._)("br",null,null,-1))),cl=r((()=>(0,t._)("p",null,[(0,t.Uk)(" まずは今の状態を確認しましょう。"),(0,t._)("br"),(0,t._)("br")],-1))),ol=["src"],gl=r((()=>(0,t._)("br",null,null,-1))),pl=r((()=>(0,t._)("br",null,null,-1))),dl=r((()=>(0,t._)("br",null,null,-1))),kl=r((()=>(0,t._)("br",null,null,-1))),Ul=r((()=>(0,t._)("br",null,null,-1))),hl=r((()=>(0,t._)("br",null,null,-1))),wl=r((()=>(0,t._)("br",null,null,-1))),fl=r((()=>(0,t._)("br",null,null,-1))),Pl=r((()=>(0,t._)("br",null,null,-1))),vl=r((()=>(0,t._)("br",null,null,-1))),Cl=r((()=>(0,t._)("br",null,null,-1))),Wl=r((()=>(0,t._)("br",null,null,-1))),Ml=r((()=>(0,t._)("br",null,null,-1))),Tl=r((()=>(0,t._)("br",null,null,-1))),Gl=r((()=>(0,t._)("br",null,null,-1))),xl=r((()=>(0,t._)("br",null,null,-1))),Hl=r((()=>(0,t._)("br",null,null,-1))),Sl=r((()=>(0,t._)("br",null,null,-1))),Ol=r((()=>(0,t._)("br",null,null,-1))),Zl=["src"],Ll=r((()=>(0,t._)("br",null,null,-1))),yl=["src"],Il=r((()=>(0,t._)("br",null,null,-1))),Dl=r((()=>(0,t._)("br",null,null,-1))),Fl=r((()=>(0,t._)("br",null,null,-1))),Kl=r((()=>(0,t._)("br",null,null,-1))),Rl=r((()=>(0,t._)("br",null,null,-1))),zl=r((()=>(0,t._)("br",null,null,-1))),Bl=r((()=>(0,t._)("br",null,null,-1))),ql=r((()=>(0,t._)("br",null,null,-1))),Al=r((()=>(0,t._)("br",null,null,-1))),Nl=r((()=>(0,t._)("br",null,null,-1))),jl=r((()=>(0,t._)("br",null,null,-1))),El=r((()=>(0,t._)("br",null,null,-1))),Jl=r((()=>(0,t._)("br",null,null,-1))),Ql=r((()=>(0,t._)("br",null,null,-1))),Vl=r((()=>(0,t._)("br",null,null,-1))),Xl=r((()=>(0,t._)("br",null,null,-1))),Yl=r((()=>(0,t._)("br",null,null,-1))),$l=["src"],ln=r((()=>(0,t._)("br",null,null,-1))),nn=r((()=>(0,t._)("br",null,null,-1))),tn=r((()=>(0,t._)("br",null,null,-1))),un=r((()=>(0,t._)("br",null,null,-1))),en=r((()=>(0,t._)("br",null,null,-1))),rn=r((()=>(0,t._)("br",null,null,-1))),sn=r((()=>(0,t._)("br",null,null,-1))),an=r((()=>(0,t._)("br",null,null,-1))),_n=r((()=>(0,t._)("br",null,null,-1))),bn=r((()=>(0,t._)("br",null,null,-1))),mn=["src"],cn=r((()=>(0,t._)("br",null,null,-1))),on=["src"],gn=r((()=>(0,t._)("br",null,null,-1))),pn=r((()=>(0,t._)("br",null,null,-1))),dn=r((()=>(0,t._)("br",null,null,-1))),kn=r((()=>(0,t._)("br",null,null,-1))),Un=r((()=>(0,t._)("br",null,null,-1))),hn=r((()=>(0,t._)("br",null,null,-1))),wn=r((()=>(0,t._)("br",null,null,-1))),fn=r((()=>(0,t._)("br",null,null,-1))),Pn=r((()=>(0,t._)("br",null,null,-1))),vn=r((()=>(0,t._)("br",null,null,-1))),Cn=r((()=>(0,t._)("br",null,null,-1))),Wn=r((()=>(0,t._)("br",null,null,-1))),Mn=r((()=>(0,t._)("br",null,null,-1))),Tn=r((()=>(0,t._)("br",null,null,-1))),Gn=r((()=>(0,t._)("br",null,null,-1))),xn=r((()=>(0,t._)("br",null,null,-1))),Hn=["src"],Sn=r((()=>(0,t._)("br",null,null,-1))),On=r((()=>(0,t._)("br",null,null,-1))),Zn=r((()=>(0,t._)("br",null,null,-1))),Ln=r((()=>(0,t._)("br",null,null,-1))),yn=r((()=>(0,t._)("br",null,null,-1))),In=r((()=>(0,t._)("br",null,null,-1))),Dn=r((()=>(0,t._)("br",null,null,-1))),Fn=r((()=>(0,t._)("br",null,null,-1))),Kn=r((()=>(0,t._)("br",null,null,-1))),Rn=r((()=>(0,t._)("br",null,null,-1))),zn=["src"],Bn=r((()=>(0,t._)("br",null,null,-1))),qn=r((()=>(0,t._)("p",null,[(0,t.Uk)(" ⑫"),(0,t._)("br"),(0,t.Uk)(" ではGithubでアップロードできた確認してみましょう。"),(0,t._)("br"),(0,t.Uk)(" Githubのページを更新すると以下のようにテキストファイルがアップロードされています。"),(0,t._)("br"),(0,t._)("br")],-1))),An=["src"],Nn=r((()=>(0,t._)("br",null,null,-1))),jn=r((()=>(0,t._)("p",null,[(0,t.Uk)(" ではここまでの流れを図で覚えましょう。"),(0,t._)("br"),(0,t._)("br")],-1))),En=["src"],Jn=r((()=>(0,t._)("br",null,null,-1))),Qn=r((()=>(0,t._)("p",null,[(0,t.Uk)(" Gitの管理下に置かれた、実際に作業をしているディレクトリのことをワークツリーと呼びます。"),(0,t._)("br"),(0,t._)("br"),(0,t.Uk)(" このワークツリーで編集、追加したファイルやフォルダを「git add」コマンドを使い選択します。"),(0,t._)("br"),(0,t.Uk)(" この操作をステージングと呼び、選択したファイルはインデックスという箱で管理されます。"),(0,t._)("br"),(0,t.Uk)(" そして、このファイルをどのような理由で選択したのか記録(git commit)し、リモートリポジトリに共有します。(git push)。"),(0,t._)("br"),(0,t.Uk)(" この一連の流れは必ず覚えましょう。"),(0,t._)("br"),(0,t._)("br"),(0,t.Uk)(" また、この操作はファイルを編集したり追加するたびにリモートリポジトリに更新する必要があるので「git add」、「git commit」、「git push」を行いましょう。"),(0,t._)("br")],-1))),Vn=r((()=>(0,t._)("br",null,null,-1))),Xn=r((()=>(0,t._)("br",null,null,-1))),Yn=r((()=>(0,t._)("br",null,null,-1))),$n=r((()=>(0,t._)("br",null,null,-1))),li=r((()=>(0,t._)("br",null,null,-1))),ni=r((()=>(0,t._)("br",null,null,-1))),ii=r((()=>(0,t._)("br",null,null,-1))),ti=r((()=>(0,t._)("br",null,null,-1))),ui=["src"],ei=r((()=>(0,t._)("br",null,null,-1))),ri=r((()=>(0,t._)("p",null,[(0,t.Uk)(" ⑭"),(0,t._)("br"),(0,t.Uk)(" gitのステータスを確認してみましょう。"),(0,t._)("br"),(0,t.Uk)(" これは追跡できていない新しいファイルがあることを意味しています。"),(0,t._)("br")],-1))),si=r((()=>(0,t._)("br",null,null,-1))),ai=["src"],_i=r((()=>(0,t._)("br",null,null,-1))),bi=r((()=>(0,t._)("p",null,[(0,t.Uk)(" ⑮"),(0,t._)("br"),(0,t.Uk)(" では次にエクスプローラから「sample.txt」を開きましょう。"),(0,t._)("br"),(0,t.Uk)(" 開いたら以下のように編集し、保存(ctrl + S)してください。"),(0,t._)("br")],-1))),mi=r((()=>(0,t._)("br",null,null,-1))),ci=["src"],oi=r((()=>(0,t._)("br",null,null,-1))),gi=["src"],pi=r((()=>(0,t._)("br",null,null,-1))),di=r((()=>(0,t._)("p",null,[(0,t.Uk)(" ⑯"),(0,t._)("br"),(0,t.Uk)(" gitのステータスを確認してみましょう。"),(0,t._)("br"),(0,t.Uk)(" 赤色で「modified」という部分が増えました。"),(0,t._)("br"),(0,t.Uk)("これは編集(修正)はされたが「git add」ができていない事を意味しています。"),(0,t._)("br")],-1))),ki=r((()=>(0,t._)("br",null,null,-1))),Ui=["src"],hi=r((()=>(0,t._)("br",null,null,-1))),wi=r((()=>(0,t._)("p",null,[(0,t.Uk)(" ⑰"),(0,t._)("br"),(0,t.Uk)(" では「git add .」を行った後にgitのステータスを確認してみましょう。"),(0,t._)("br"),(0,t.Uk)(" すると今度は緑色で「modified」という部分が増えました。これは編集(修正)はされたが「git commit」ができていない事を意味しています。"),(0,t._)("br")],-1))),fi=r((()=>(0,t._)("br",null,null,-1))),Pi=["src"],vi=r((()=>(0,t._)("br",null,null,-1))),Ci=r((()=>(0,t._)("p",null,[(0,t.Uk)(" ⑱"),(0,t._)("br"),(0,t.Uk)(" では次に「git commit」を行った後にgitのステータスを確認してみましょう。"),(0,t._)("br"),(0,t.Uk)(" すると今度は白色で文章が表示されました。これは「git commit」まで終わり、コミット対象が無い事を意味しています。"),(0,t._)("br")],-1))),Wi=r((()=>(0,t._)("br",null,null,-1))),Mi=["src"],Ti=r((()=>(0,t._)("br",null,null,-1))),Gi=r((()=>(0,t._)("br",null,null,-1))),xi=r((()=>(0,t._)("br",null,null,-1))),Hi=r((()=>(0,t._)("br",null,null,-1))),Si=r((()=>(0,t._)("br",null,null,-1))),Oi=r((()=>(0,t._)("br",null,null,-1))),Zi=r((()=>(0,t._)("br",null,null,-1))),Li=r((()=>(0,t._)("br",null,null,-1))),yi=["src"],Ii=r((()=>(0,t._)("br",null,null,-1))),Di=r((()=>(0,t._)("p",null,[(0,t.Uk)(" ⑳"),(0,t._)("br"),(0,t.Uk)(" 「git diff」コマンドを入力しましょう。"),(0,t._)("br"),(0,t.Uk)(" 緑色で書かれている部分は今回の修正内容です。赤色は修正前の内容です。"),(0,t._)("br")],-1))),Fi=r((()=>(0,t._)("br",null,null,-1))),Ki=["src"],Ri=r((()=>(0,t._)("br",null,null,-1))),zi=r((()=>(0,t._)("p",null,[(0,t.Uk)(" ㉑"),(0,t._)("br"),(0,t.Uk)(" 差分が見れたところで「git add」と「git commit」を行いましょう。"),(0,t._)("br"),(0,t.Uk)(" 以下の画像のようになればOKです。"),(0,t._)("br")],-1))),Bi=r((()=>(0,t._)("br",null,null,-1))),qi=["src"],Ai=r((()=>(0,t._)("br",null,null,-1))),Ni=r((()=>(0,t._)("br",null,null,-1))),ji=r((()=>(0,t._)("br",null,null,-1))),Ei=r((()=>(0,t._)("br",null,null,-1))),Ji=r((()=>(0,t._)("br",null,null,-1))),Qi=r((()=>(0,t._)("br",null,null,-1))),Vi=r((()=>(0,t._)("br",null,null,-1))),Xi=r((()=>(0,t._)("br",null,null,-1))),Yi=r((()=>(0,t._)("br",null,null,-1))),$i=r((()=>(0,t._)("br",null,null,-1))),lt=r((()=>(0,t._)("br",null,null,-1))),nt=["src"],it=r((()=>(0,t._)("br",null,null,-1))),tt=r((()=>(0,t._)("p",null,[(0,t.Uk)(" ㉓"),(0,t._)("br"),(0,t.Uk)(" 最後にファイルを追加し、ファイルの中身を編集した情報を「git push」でアップロードしましょう。"),(0,t._)("br"),(0,t.Uk)(" これでlesson-1は終了です。"),(0,t._)("br"),(0,t._)("br")],-1))),ut=["src"],et=r((()=>(0,t._)("br",null,null,-1))),rt={class:"main-content"},st=r((()=>(0,t._)("p",null,"Gitのコマンド基本的な操作と考え方を学びましょう。",-1))),at=r((()=>(0,t._)("p",null,"まずはどういったものなのか図と照らし合わせながら覚えていきましょう！",-1))),_t=r((()=>(0,t._)("p",null,[(0,t.Uk)(" 皆さんがこれから学ぶ「コマンドライン」について概要を理解しましょう!"),(0,t._)("br")],-1))),bt=r((()=>(0,t._)("br",null,null,-1))),mt=r((()=>(0,t._)("p",null,[(0,t.Uk)(" ・分散型バージョン管理システム。"),(0,t._)("br"),(0,t.Uk)(" コンピュータ上のファイルに発生した変更を記録し、履歴を管理してくれる便利なツールになります。 "),(0,t._)("br"),(0,t._)("br"),(0,t.Uk)(" ではGitというのは具体的にどのように使うものなのか深掘りしていきましょう! ")],-1))),ct=r((()=>(0,t._)("br",null,null,-1))),ot=r((()=>(0,t._)("p",null,[(0,t.Uk)(" 例えば、この様にフォルダの中に3つのファイルがあるとしましょう。"),(0,t._)("br"),(0,t._)("br"),(0,t.Uk)(" これらのファイルの作業を行うときすべてAさんという人だけで行うとするととても時間がかかってしまいます。"),(0,t._)("br"),(0,t.Uk)(" そのため、BさんやCさんなどを入れて分担作業して作業する方が効率的になります。"),(0,t._)("br"),(0,t._)("br"),(0,t.Uk)(" Gitはその管理をしやすくするツールだと覚えておきましょう。"),(0,t._)("br")],-1))),gt=r((()=>(0,t._)("br",null,null,-1))),pt=["src"],dt=r((()=>(0,t._)("br",null,null,-1))),kt=r((()=>(0,t._)("p",null,[(0,t.Uk)(" Gitを使えるように準備をしましょう。"),(0,t._)("br"),(0,t.Uk)(" まずはGitHubというサイトで新規登録を行いましょう。"),(0,t._)("br"),(0,t._)("br")],-1))),Ut=r((()=>(0,t._)("div",{class:"download"},[(0,t._)("a",{class:"download-link",href:"https://github.com/"},"GitHubで新規登録を行う"),(0,t._)("br"),(0,t._)("br"),(0,t._)("br"),(0,t._)("br")],-1))),ht=r((()=>(0,t._)("p",null,[(0,t.Uk)(" 新規登録をおこなったら初期設定をしましょう。"),(0,t._)("br"),(0,t.Uk)(" このコマンドはGitHubアカウントを変えない限り変えることはなくほとんど変えることはないのでので覚えなくても大丈夫です。"),(0,t._)("br"),(0,t._)("br"),(0,t.Uk)(" ①"),(0,t._)("br"),(0,t.Uk)(" 「環境構築やインストール」でインストールした「ターミナル」を開きましょう。 開くとこのような画面になります。 ")],-1))),wt=r((()=>(0,t._)("br",null,null,-1))),ft=["src"],Pt=r((()=>(0,t._)("br",null,null,-1))),vt=r((()=>(0,t._)("p",null,[(0,t.Uk)(" ②"),(0,t._)("br"),(0,t.Uk)(" まずはユーザー名とメールアドレスを設定しましょう。"),(0,t._)("br"),(0,t.Uk)(" 以下の画像のようにすべて入力して実行しましょう。"),(0,t._)("br"),(0,t._)("br")],-1))),Ct=["src"],Wt=r((()=>(0,t._)("br",null,null,-1))),Mt=r((()=>(0,t._)("p",null,[(0,t.Uk)(" 初期設定は以上で完了です。"),(0,t._)("br"),(0,t._)("br")],-1))),Tt=r((()=>(0,t._)("p",null,[(0,t._)("br"),(0,t.Uk)(" では今回Gitを学習するための練習フォルダとファイルを作成しましょう。"),(0,t._)("br"),(0,t._)("br"),(0,t.Uk)(" ③"),(0,t._)("br"),(0,t.Uk)(" ホームディレクトリに以下のフォルダを作成してください。"),(0,t._)("br"),(0,t.Uk)(" 作成したらそのフォルダに移動してテキストファイルを作成しましょう。"),(0,t._)("br"),(0,t.Uk)(" Finderで作成したフォルダの「git-practice」を確認すると以下のようにテキストファイルが作成されています。"),(0,t._)("br")],-1))),Gt=r((()=>(0,t._)("br",null,null,-1))),xt=["src"],Ht=r((()=>(0,t._)("br",null,null,-1))),St=["src"],Ot=r((()=>(0,t._)("br",null,null,-1))),Zt=r((()=>(0,t._)("br",null,null,-1))),Lt=r((()=>(0,t._)("br",null,null,-1))),yt=r((()=>(0,t._)("br",null,null,-1))),It=r((()=>(0,t._)("br",null,null,-1))),Dt=r((()=>(0,t._)("br",null,null,-1))),Ft=r((()=>(0,t._)("br",null,null,-1))),Kt=r((()=>(0,t._)("br",null,null,-1))),Rt=r((()=>(0,t._)("br",null,null,-1))),zt=r((()=>(0,t._)("br",null,null,-1))),Bt=r((()=>(0,t._)("br",null,null,-1))),qt=r((()=>(0,t._)("br",null,null,-1))),At=r((()=>(0,t._)("br",null,null,-1))),Nt=["src"],jt=r((()=>(0,t._)("br",null,null,-1))),Et=r((()=>(0,t._)("p",null,[(0,t.Uk)(" ④"),(0,t._)("br"),(0,t.Uk)(" それではコマンドを入力しましょう。"),(0,t._)("br"),(0,t.Uk)(" 以下のようになればOKです。"),(0,t._)("br"),(0,t._)("br")],-1))),Jt=["src"],Qt=r((()=>(0,t._)("br",null,null,-1))),Vt=r((()=>(0,t._)("p",null,[(0,t.Uk)(" では自分のPC上で作成したファイルを他の人に共有できるようにウェブ上に共有場所を作成しましょう。"),(0,t._)("br"),(0,t._)("br"),(0,t.Uk)(" ⑤"),(0,t._)("br"),(0,t.Uk)(" 先ほど登録したGitHubを開きましょう。"),(0,t._)("br"),(0,t.Uk)(" その次に左にある「New」ボタンを押しましょう。"),(0,t._)("br"),(0,t._)("br")],-1))),Xt=["src"],Yt=r((()=>(0,t._)("br",null,null,-1))),$t=r((()=>(0,t._)("p",null,[(0,t.Uk)(" ⑥"),(0,t._)("br"),(0,t.Uk)(" 次に「Repository name」に「git-practice」と入力しましょう。"),(0,t._)("br"),(0,t.Uk)(" 「Description」は入力しなくても大丈夫です。"),(0,t._)("br"),(0,t.Uk)(" リポジトリのタイプは「public」を選択しましょう。"),(0,t._)("br"),(0,t._)("br"),(0,t.Uk)(" 下の残りの設定はそのままで「Create repository」を押しましょう。"),(0,t._)("br"),(0,t._)("br")],-1))),lu=["src"],nu=r((()=>(0,t._)("br",null,null,-1))),iu=r((()=>(0,t._)("br",null,null,-1))),tu=r((()=>(0,t._)("br",null,null,-1))),uu=r((()=>(0,t._)("br",null,null,-1))),eu=r((()=>(0,t._)("br",null,null,-1))),ru=r((()=>(0,t._)("br",null,null,-1))),su=r((()=>(0,t._)("br",null,null,-1))),au=["src"],_u=r((()=>(0,t._)("br",null,null,-1))),bu=r((()=>(0,t._)("p",null,[(0,t.Uk)(" まずは今の状態を確認しましょう。"),(0,t._)("br"),(0,t._)("br")],-1))),mu=["src"],cu=r((()=>(0,t._)("br",null,null,-1))),ou=r((()=>(0,t._)("br",null,null,-1))),gu=r((()=>(0,t._)("br",null,null,-1))),pu=r((()=>(0,t._)("br",null,null,-1))),du=r((()=>(0,t._)("br",null,null,-1))),ku=r((()=>(0,t._)("br",null,null,-1))),Uu=r((()=>(0,t._)("br",null,null,-1))),hu=r((()=>(0,t._)("br",null,null,-1))),wu=r((()=>(0,t._)("br",null,null,-1))),fu=r((()=>(0,t._)("br",null,null,-1))),Pu=r((()=>(0,t._)("br",null,null,-1))),vu=r((()=>(0,t._)("br",null,null,-1))),Cu=r((()=>(0,t._)("br",null,null,-1))),Wu=r((()=>(0,t._)("br",null,null,-1))),Mu=r((()=>(0,t._)("br",null,null,-1))),Tu=r((()=>(0,t._)("br",null,null,-1))),Gu=r((()=>(0,t._)("br",null,null,-1))),xu=r((()=>(0,t._)("br",null,null,-1))),Hu=r((()=>(0,t._)("br",null,null,-1))),Su=["src"],Ou=r((()=>(0,t._)("br",null,null,-1))),Zu=["src"],Lu=r((()=>(0,t._)("br",null,null,-1))),yu=r((()=>(0,t._)("br",null,null,-1))),Iu=r((()=>(0,t._)("br",null,null,-1))),Du=r((()=>(0,t._)("br",null,null,-1))),Fu=r((()=>(0,t._)("br",null,null,-1))),Ku=r((()=>(0,t._)("br",null,null,-1))),Ru=r((()=>(0,t._)("br",null,null,-1))),zu=r((()=>(0,t._)("br",null,null,-1))),Bu=r((()=>(0,t._)("br",null,null,-1))),qu=r((()=>(0,t._)("br",null,null,-1))),Au=r((()=>(0,t._)("br",null,null,-1))),Nu=r((()=>(0,t._)("br",null,null,-1))),ju=r((()=>(0,t._)("br",null,null,-1))),Eu=r((()=>(0,t._)("br",null,null,-1))),Ju=r((()=>(0,t._)("br",null,null,-1))),Qu=r((()=>(0,t._)("br",null,null,-1))),Vu=r((()=>(0,t._)("br",null,null,-1))),Xu=["src"],Yu=r((()=>(0,t._)("br",null,null,-1))),$u=r((()=>(0,t._)("br",null,null,-1))),le=r((()=>(0,t._)("br",null,null,-1))),ne=r((()=>(0,t._)("br",null,null,-1))),ie=r((()=>(0,t._)("br",null,null,-1))),te=r((()=>(0,t._)("br",null,null,-1))),ue=r((()=>(0,t._)("br",null,null,-1))),ee=r((()=>(0,t._)("br",null,null,-1))),re=r((()=>(0,t._)("br",null,null,-1))),se=r((()=>(0,t._)("br",null,null,-1))),ae=["src"],_e=r((()=>(0,t._)("br",null,null,-1))),be=["src"],me=r((()=>(0,t._)("br",null,null,-1))),ce=r((()=>(0,t._)("br",null,null,-1))),oe=r((()=>(0,t._)("br",null,null,-1))),ge=r((()=>(0,t._)("br",null,null,-1))),pe=r((()=>(0,t._)("br",null,null,-1))),de=r((()=>(0,t._)("br",null,null,-1))),ke=r((()=>(0,t._)("br",null,null,-1))),Ue=r((()=>(0,t._)("br",null,null,-1))),he=r((()=>(0,t._)("br",null,null,-1))),we=r((()=>(0,t._)("br",null,null,-1))),fe=["src"],Pe=r((()=>(0,t._)("br",null,null,-1))),ve=r((()=>(0,t._)("p",null,[(0,t.Uk)(" ⑪"),(0,t._)("br"),(0,t.Uk)(" ではGithubでアップロードできた確認してみましょう。"),(0,t._)("br"),(0,t.Uk)(" Githubのページを更新すると以下のようにテキストファイルがアップロードされています。"),(0,t._)("br"),(0,t._)("br")],-1))),Ce=["src"],We=r((()=>(0,t._)("br",null,null,-1))),Me=r((()=>(0,t._)("p",null,[(0,t.Uk)(" ではここまでの流れを図で覚えましょう。"),(0,t._)("br"),(0,t._)("br")],-1))),Te=["src"],Ge=r((()=>(0,t._)("br",null,null,-1))),xe=r((()=>(0,t._)("p",null,[(0,t.Uk)(" Gitの管理下に置かれた、実際に作業をしているディレクトリのことをワークツリーと呼びます。"),(0,t._)("br"),(0,t._)("br"),(0,t.Uk)(" このワークツリーで編集、追加したファイルやフォルダを「git add」コマンドを使い選択します。"),(0,t._)("br"),(0,t.Uk)(" この操作をステージングと呼び、選択したファイルはインデックスという箱で管理されます。"),(0,t._)("br"),(0,t.Uk)(" そして、このファイルをどのような理由で選択したのか記録(git commit)し、リモートリポジトリに共有します。(git push)。"),(0,t._)("br"),(0,t.Uk)(" この一連の流れは必ず覚えましょう。"),(0,t._)("br"),(0,t._)("br"),(0,t.Uk)(" また、この操作はファイルを編集したり追加するたびにリモートリポジトリに更新する必要があるので「git add」、「git commit」、「git push」を行いましょう。"),(0,t._)("br")],-1))),He=r((()=>(0,t._)("br",null,null,-1))),Se=r((()=>(0,t._)("br",null,null,-1))),Oe=r((()=>(0,t._)("br",null,null,-1))),Ze=r((()=>(0,t._)("br",null,null,-1))),Le=r((()=>(0,t._)("br",null,null,-1))),ye=r((()=>(0,t._)("br",null,null,-1))),Ie=r((()=>(0,t._)("br",null,null,-1))),De=r((()=>(0,t._)("br",null,null,-1))),Fe=["src"],Ke=r((()=>(0,t._)("br",null,null,-1))),Re=r((()=>(0,t._)("p",null,[(0,t.Uk)(" ⑬"),(0,t._)("br"),(0,t.Uk)(" gitのステータスを確認してみましょう。"),(0,t._)("br"),(0,t.Uk)(" これは追跡できていない新しいファイルがあることを意味しています。"),(0,t._)("br")],-1))),ze=r((()=>(0,t._)("br",null,null,-1))),Be=["src"],qe=r((()=>(0,t._)("br",null,null,-1))),Ae=r((()=>(0,t._)("p",null,[(0,t.Uk)(" ⑭"),(0,t._)("br"),(0,t.Uk)(" では次にFinderから「sample.txt」を開きましょう。"),(0,t._)("br"),(0,t.Uk)(" 開いたら以下のように編集し、保存(ctrl + S)してください。"),(0,t._)("br")],-1))),Ne=r((()=>(0,t._)("br",null,null,-1))),je=["src"],Ee=r((()=>(0,t._)("br",null,null,-1))),Je=["src"],Qe=r((()=>(0,t._)("br",null,null,-1))),Ve=r((()=>(0,t._)("p",null,[(0,t.Uk)(" ⑮"),(0,t._)("br"),(0,t.Uk)(" gitのステータスを確認してみましょう。"),(0,t._)("br"),(0,t.Uk)(" 赤色で「modified」という部分が増えました。"),(0,t._)("br"),(0,t.Uk)("これは編集(修正)はされたが「git add」ができていない事を意味しています。"),(0,t._)("br")],-1))),Xe=r((()=>(0,t._)("br",null,null,-1))),Ye=["src"],$e=r((()=>(0,t._)("br",null,null,-1))),lr=r((()=>(0,t._)("p",null,[(0,t.Uk)(" ⑯"),(0,t._)("br"),(0,t.Uk)(" では「git add .」を行った後にgitのステータスを確認してみましょう。"),(0,t._)("br"),(0,t.Uk)(" すると今度は緑色で「modified」という部分が増えました。これは編集(修正)はされたが「git commit」ができていない事を意味しています。"),(0,t._)("br")],-1))),nr=r((()=>(0,t._)("br",null,null,-1))),ir=["src"],tr=r((()=>(0,t._)("br",null,null,-1))),ur=r((()=>(0,t._)("p",null,[(0,t.Uk)(" ⑰"),(0,t._)("br"),(0,t.Uk)(" では次に「git commit」を行った後にgitのステータスを確認してみましょう。"),(0,t._)("br"),(0,t.Uk)(" すると今度は白色で文章が表示されました。これは「git commit」まで終わり、コミット対象が無い事を意味しています。"),(0,t._)("br")],-1))),er=r((()=>(0,t._)("br",null,null,-1))),rr=["src"],sr=r((()=>(0,t._)("br",null,null,-1))),ar=r((()=>(0,t._)("br",null,null,-1))),_r=r((()=>(0,t._)("br",null,null,-1))),br=r((()=>(0,t._)("br",null,null,-1))),mr=r((()=>(0,t._)("br",null,null,-1))),cr=r((()=>(0,t._)("br",null,null,-1))),or=r((()=>(0,t._)("br",null,null,-1))),gr=r((()=>(0,t._)("br",null,null,-1))),pr=["src"],dr=r((()=>(0,t._)("br",null,null,-1))),kr=r((()=>(0,t._)("p",null,[(0,t.Uk)(" ⑲"),(0,t._)("br"),(0,t.Uk)(" 「git diff」コマンドを入力しましょう。"),(0,t._)("br"),(0,t.Uk)(" 緑色で書かれている部分は今回の修正内容です。赤色は修正前の内容です。"),(0,t._)("br")],-1))),Ur=r((()=>(0,t._)("br",null,null,-1))),hr=["src"],wr=r((()=>(0,t._)("br",null,null,-1))),fr=r((()=>(0,t._)("p",null,[(0,t.Uk)(" ⑳"),(0,t._)("br"),(0,t.Uk)(" 差分が見れたところで「git add」と「git commit」を行いましょう。"),(0,t._)("br"),(0,t.Uk)(" 以下の画像のようになればOKです。"),(0,t._)("br")],-1))),Pr=r((()=>(0,t._)("br",null,null,-1))),vr=["src"],Cr=r((()=>(0,t._)("br",null,null,-1))),Wr=r((()=>(0,t._)("br",null,null,-1))),Mr=r((()=>(0,t._)("br",null,null,-1))),Tr=r((()=>(0,t._)("br",null,null,-1))),Gr=r((()=>(0,t._)("br",null,null,-1))),xr=r((()=>(0,t._)("br",null,null,-1))),Hr=r((()=>(0,t._)("br",null,null,-1))),Sr=r((()=>(0,t._)("br",null,null,-1))),Or=r((()=>(0,t._)("br",null,null,-1))),Zr=r((()=>(0,t._)("br",null,null,-1))),Lr=r((()=>(0,t._)("br",null,null,-1))),yr=["src"],Ir=r((()=>(0,t._)("br",null,null,-1))),Dr=r((()=>(0,t._)("p",null,[(0,t.Uk)(" ㉒"),(0,t._)("br"),(0,t.Uk)(" 最後にファイルを追加し、ファイルの中身を編集した情報を「git push」でアップロードしましょう。"),(0,t._)("br"),(0,t.Uk)(" これでlesson-1は終了です。"),(0,t._)("br"),(0,t._)("br")],-1))),Fr=["src"],Kr=r((()=>(0,t._)("br",null,null,-1))),Rr={class:"side-content"},zr={class:"side-content"};function Br(l,n,i,r,Br,qr){const Ar=(0,t.up)("Header"),Nr=(0,t.up)("Spinner"),jr=(0,t.up)("Title"),Er=(0,t.up)("Document"),Jr=(0,t.up)("SubTitle"),Qr=(0,t.up)("SectionTitle"),Vr=(0,t.up)("HighlightWord"),Xr=(0,t.up)("Modal"),Yr=(0,t.up)("TableOfContents"),$r=(0,t.up)("Footer");return(0,t.wg)(),(0,t.iD)("div",null,[(0,t.Wm)(Ar),(0,t.Wm)(Nr,{isLoading:r.isLoading},null,8,["isLoading"]),(0,t._)("button",{class:"change_component_button",onClick:n[0]||(n[0]=(...l)=>r.toggleOS&&r.toggleOS(...l))},(0,u.zw)(r.isWindows?"Macをお持ちの方はこちら":"Windowsをお持ちの方はこちら"),1),(0,t._)("div",s,[(0,t.wy)((0,t._)("div",a,[(0,t.Wm)(jr,{title:"Git 1 (Windowsの方)",id:"Title-w"}),(0,t.Wm)(Er,null,{default:(0,t.w5)((()=>[_,b])),_:1}),(0,t.Wm)(Jr,{subTitle:"1. Gitについて学ぶ",id:"subTitle1-w"}),(0,t.Wm)(Er,null,{default:(0,t.w5)((()=>[(0,t.Wm)(Qr,{sectionTitle:"1-1. Gitとは?",id:"sectionTitle1-1-w"}),m,c,(0,t.Wm)(Vr,{word:"Git"}),o,g])),_:1}),(0,t.Wm)(Er,null,{default:(0,t.w5)((()=>[(0,t.Wm)(Qr,{sectionTitle:"1-2. Gitの使い方",id:"sectionTitle1-2-w"}),p,d,(0,t._)("div",null,[(0,t._)("img",{onClick:n[1]||(n[1]=l=>r.openModal(r.imagePaths.win.solo)),src:r.imagePaths.win.solo,class:"powerpoint-image",alt:"solo"},null,8,k)]),U])),_:1}),(0,t.Wm)(Jr,{subTitle:"2. Gitコマンドを覚える",id:"subTitle2-w"}),(0,t.Wm)(Er,null,{default:(0,t.w5)((()=>[(0,t.Wm)(Qr,{sectionTitle:"2-1. GitHubに登録する",id:"sectionTitle2-1-w"}),h,w,(0,t.Wm)(Qr,{sectionTitle:"2-2. Gitの初期設定をする",id:"sectionTitle2-2-w"}),f,P,(0,t._)("div",null,[(0,t._)("img",{onClick:n[2]||(n[2]=l=>r.openModal(r.imagePaths.win.step1)),src:r.imagePaths.win.step1,class:"screen-image",alt:"git-bash-1"},null,8,v)]),C,W,(0,t._)("div",null,[(0,t._)("img",{onClick:n[3]||(n[3]=l=>r.openModal(r.imagePaths.win.step2)),src:r.imagePaths.win.step2,class:"screen-image",alt:"git-bash-2"},null,8,M)]),T,G,(0,t.Wm)(Qr,{sectionTitle:"2-3. Gitを準備する",id:"sectionTitle2-3-w"}),x,H,(0,t._)("div",null,[(0,t._)("img",{onClick:n[4]||(n[4]=l=>r.openModal(r.imagePaths.win.step3)),src:r.imagePaths.win.step3,class:"screen-image",alt:"git-bash-3"},null,8,S)]),O,(0,t._)("div",null,[(0,t._)("img",{onClick:n[5]||(n[5]=l=>r.openModal(r.imagePaths.win.folder1)),src:r.imagePaths.win.folder1,class:"screen-image",alt:"folder-1"},null,8,Z)]),L,(0,t._)("p",null,[(0,t.Uk)(" 作成した練習ファイルの中でGitを使えるようにしましょう。"),y,I,(0,t.Wm)(Vr,{word:"git init"}),D,(0,t.Uk)(" ・gitを使えるようにするコマンド。"),F,(0,t.Uk)(" ローカルリポジトリを新規に作成するという意味もあります。"),K,R,(0,t.Wm)(Vr,{word:"ローカルリポジトリ"}),z,(0,t.Uk)(" ・そのコマンドを入力したフォルダ内のファイルやフォルダを管理できる専用の倉庫。"),B,(0,t.Uk)(" この倉庫は自分のパソコン上で作られます。"),q,A,(0,t.Uk)(" 図で表すと以下のようになります。"),N,j]),(0,t._)("div",null,[(0,t._)("img",{onClick:n[6]||(n[6]=l=>r.openModal(r.imagePaths.win.init)),src:r.imagePaths.win.init,class:"screen-image",alt:"init"},null,8,E)]),J,Q,(0,t._)("div",null,[(0,t._)("img",{onClick:n[7]||(n[7]=l=>r.openModal(r.imagePaths.win.step4)),src:r.imagePaths.win.step4,class:"screen-image",alt:"git-bash-4"},null,8,V)]),X,(0,t.Wm)(Qr,{sectionTitle:"2-4. 共有場所の準備と登録",id:"sectionTitle2-4-w"}),Y,(0,t._)("div",null,[(0,t._)("img",{onClick:n[8]||(n[8]=l=>r.openModal(r.imagePaths.win.github1)),src:r.imagePaths.win.github1,class:"screen-image",alt:"github-1"},null,8,$)]),ll,nl,(0,t._)("div",null,[(0,t._)("img",{onClick:n[9]||(n[9]=l=>r.openModal(r.imagePaths.win.github2)),src:r.imagePaths.win.github2,class:"screen-image",alt:"github-2"},null,8,il)]),tl,(0,t._)("p",null,[(0,t.Uk)(" このような画面になれば共有場所の作成は完了です。"),ul,(0,t.Uk)(" ではこの共有場所は何か覚えましょう。"),el,rl,(0,t.Wm)(Vr,{word:"リモートリポジトリ"}),sl,(0,t.Uk)(" ・ローカルリポジトリで管理したフォルダ内のファイルやフォルダを第三者に共有したり、管理ができるWeb上の倉庫。"),al,_l]),(0,t._)("div",null,[(0,t._)("img",{onClick:n[10]||(n[10]=l=>r.openModal(r.imagePaths.win.github3)),src:r.imagePaths.win.github3,class:"screen-image",alt:"github-3"},null,8,bl)]),ml,cl,(0,t._)("div",null,[(0,t._)("img",{onClick:n[11]||(n[11]=l=>r.openModal(r.imagePaths.win.state1)),src:r.imagePaths.win.state1,class:"screen-image",alt:"state-1"},null,8,ol)]),gl,(0,t._)("p",null,[(0,t.Uk)(" 画像にある問題を整理しましょう。"),pl,dl,(0,t.Uk)(" 「git init」で作成したローカルリポジトリに管理されているフォルダはまだ自分のPC上でしか見ることができません。"),kl,(0,t.Uk)(" そのため、リモートリポジトリにアップロードするためには登録が必要になります。"),Ul,hl,wl,(0,t.Uk)(" それでは登録のコマンドを覚えましょう。"),fl,Pl,(0,t.Wm)(Vr,{word:"git remote add リモートリポジトリ名 URL"}),vl,(0,t.Uk)(" ・リモートリポジトリを登録するコマンド。"),Cl,(0,t.Uk)(" ここで表記されている「リモートリポジトリ名」は、GitHubで作ったリモートリポジトリと通信するために必要なURLを簡単なキーワードにして指定することができます。"),Wl,(0,t.Uk)(" デフォルトではoriginという名前で設定することが多いです。"),Ml,Tl,(0,t.Uk)(" 名前を設定するために以下のような手順を踏みましょう。"),Gl,xl,(0,t.Uk)(" ⑦"),Hl,(0,t.Uk)(" 以下をコピーして実行しましょう。"),Sl,Ol]),(0,t._)("div",null,[(0,t._)("img",{onClick:n[12]||(n[12]=l=>r.openModal(r.imagePaths.win.github4)),src:r.imagePaths.win.github4,class:"screen-image",alt:"github-4"},null,8,Zl)]),Ll,(0,t._)("div",null,[(0,t._)("img",{onClick:n[13]||(n[13]=l=>r.openModal(r.imagePaths.win.step5)),src:r.imagePaths.win.step5,class:"screen-image",alt:"git-bash-5"},null,8,yl)]),Il,(0,t._)("p",null,[(0,t.Uk)(" 登録が完了しました。"),Dl,Fl,(0,t.Uk)(" ではGithub(リモートリポジトリ)上にアップロードしましょう！"),Kl,(0,t.Uk)(" (1) まだアップロード(共有)してない、またはアップロードしてない編集情報をフォルダやファイルを選択する。"),Rl,(0,t.Uk)(" (2) フォルダやファイルにどのような編集や追加をしたか記録をする"),zl,(0,t.Uk)(" (3) アップロード(共有)する"),Bl,ql,(0,t.Uk)(" ⑧"),Al,(0,t.Uk)(" ではアップロードするファイルを選択しましょう。"),Nl,jl,(0,t.Wm)(Vr,{word:"git add (フォルダ名)ファイル名"}),El,(0,t.Uk)(" ・登録したリモートリポジトリにアップロードするファイルを選択するコマンド。"),Jl,Ql,(0,t.Uk)(" ファイルやフォルダすべてを一括で選択する方法。"),Vl,(0,t.Uk)(" →"),(0,t.Wm)(Vr,{word:"git add ."}),Xl,Yl]),(0,t._)("div",null,[(0,t._)("img",{onClick:n[14]||(n[14]=l=>r.openModal(r.imagePaths.win.step6)),src:r.imagePaths.win.step6,class:"screen-image",alt:"git-bash-6"},null,8,$l)]),ln,(0,t._)("p",null,[(0,t.Uk)(" ⑨"),nn,(0,t.Uk)(" 次にフォルダやファイルにどのような編集や追加をしたか記録をしましょう。"),tn,un,(0,t.Wm)(Vr,{word:"git commit -m 'メッセージ'"}),en,(0,t.Uk)(" ・ファイルをaddコマンドで選択した理由は何か記録するコマンド。"),rn,(0,t.Uk)(" メッセージには「□□ファイルの○○を修正」、「△△ファイルの名前を変更」、「××ファイルの作成」などを記載しますが、今回は初めてなので「first commit」や「initialize commit」と入力しましょう。"),sn,an,(0,t.Uk)(" GitHubにあるコミットコマンドをコピーしコマンドを入力しましょう。"),_n,bn]),(0,t._)("div",null,[(0,t._)("img",{onClick:n[15]||(n[15]=l=>r.openModal(r.imagePaths.win.github5)),src:r.imagePaths.win.github5,class:"screen-image",alt:"github-5"},null,8,mn)]),cn,(0,t._)("div",null,[(0,t._)("img",{onClick:n[16]||(n[16]=l=>r.openModal(r.imagePaths.win.step7)),src:r.imagePaths.win.step7,class:"screen-image",alt:"git-bash-7"},null,8,on)]),gn,(0,t._)("p",null,[(0,t.Uk)(" ⑩"),pn,(0,t.Uk)(" 最後にアップロードをしましょう。"),dn,kn,(0,t.Wm)(Vr,{word:"git push リモートリポジトリ名 ローカルリポジトリ名"}),Un,(0,t.Uk)(" ・ローカルリポジトリからリモートリポジトリにファイルをアップロード(共有)するコマンド。"),hn,wn,(0,t.Uk)(" 先ほどリモートリポジトリ名は「origin」と設定しました。ではローカルリポジトリの名前は何かというと、「git bash」の黄色文字の右に「master」と書かれていましたが今回はローカルリポジトリの名前だと覚えましょう。"),fn,Pn,(0,t.Uk)(" 本来は別の意味があり、正確に言えば少し違いますが今はこの覚え方で大丈夫です。"),vn,Cn,(0,t.Uk)(" しかし、この「master」という単語は2021年6月7日以降GitHubでは使われなくなったデフォルト名になりました。"),Wn,(0,t.Uk)(" 現在は「main」という名前になっているため、これからgitでリモートリポジトリを作るときに「main」作られるように初期設定をしましょう。"),Mn,Tn,(0,t.Uk)(" 以下を入力して下さい。この設定は一回のみで大丈夫です。"),Gn,xn]),(0,t._)("div",null,[(0,t._)("img",{onClick:n[17]||(n[17]=l=>r.openModal(r.imagePaths.win.step8)),src:r.imagePaths.win.step8,class:"screen-image",alt:"git-bash-8"},null,8,Hn)]),Sn,(0,t._)("p",null,[(0,t.Uk)(" ⑪"),On,(0,t.Uk)(" それではアップロードコマンドを入力してください。"),Zn,Ln,(0,t.Uk)(" アップロードが1回目の場合、少しオプションをつける必要があるため以下を入力しましょう。"),yn,(0,t.Uk)(" →"),(0,t.Wm)(Vr,{word:"git push -u origin main"}),In,(0,t.Uk)(" 2回目以降のアップロードは「-u」のオプションは必要ありません。"),Dn,(0,t.Uk)(" また以下のように省略してアップロードすることも出来ます。"),Fn,(0,t.Uk)(" →"),(0,t.Wm)(Vr,{word:"git push"}),Kn,Rn]),(0,t._)("div",null,[(0,t._)("img",{onClick:n[18]||(n[18]=l=>r.openModal(r.imagePaths.win.step9)),src:r.imagePaths.win.step9,class:"screen-image",alt:"git-bash-9"},null,8,zn)]),Bn,qn,(0,t._)("div",null,[(0,t._)("img",{onClick:n[19]||(n[19]=l=>r.openModal(r.imagePaths.win.github6)),src:r.imagePaths.win.github6,class:"screen-image",alt:"github-6"},null,8,An)]),Nn,jn,(0,t._)("div",null,[(0,t._)("img",{onClick:n[20]||(n[20]=l=>r.openModal(r.imagePaths.win.state2)),src:r.imagePaths.win.state2,class:"screen-image",alt:"state-2"},null,8,En)]),Jn,Qn])),_:1}),(0,t.Wm)(Jr,{subTitle:"3. ファイルの状態を確認する",id:"subTitle3-w"}),(0,t.Wm)(Er,null,{default:(0,t.w5)((()=>[(0,t.Wm)(Qr,{sectionTitle:"3-1. 変更したファイルの確認方法",id:"sectionTitle3-1-w"}),(0,t._)("p",null,[(0,t.Uk)(" 先ほどの一連の流れを行うと自分がadd,commitなどをしたのかわからなくなってしまうことがあります。"),Vn,(0,t.Uk)(" そのために必要なファイルの状態を確認するコマンドを学びましょう。"),Xn,Yn,(0,t.Wm)(Vr,{word:"git status"}),$n,(0,t.Uk)(" ・自分が変更したファイルの状況を確認できるコマンド。"),li,ni,(0,t.Uk)(" ⑬"),ii,(0,t.Uk)(" では新しいファイルをtouchコマンドで作成しましょう。 ")]),(0,t._)("div",null,[ti,(0,t._)("img",{onClick:n[21]||(n[21]=l=>r.openModal(r.imagePaths.win.step10)),src:r.imagePaths.win.step10,class:"screen-image",alt:"git-bash-10"},null,8,ui)]),ei,ri,si,(0,t._)("div",null,[(0,t._)("img",{onClick:n[22]||(n[22]=l=>r.openModal(r.imagePaths.win.step11)),src:r.imagePaths.win.step11,class:"screen-image",alt:"git-bash-11"},null,8,ai)]),_i,bi,mi,(0,t._)("div",null,[(0,t._)("img",{onClick:n[23]||(n[23]=l=>r.openModal(r.imagePaths.win.folder2)),src:r.imagePaths.win.folder2,class:"screen-image",alt:"folder-2"},null,8,ci)]),oi,(0,t._)("div",null,[(0,t._)("img",{onClick:n[24]||(n[24]=l=>r.openModal(r.imagePaths.win.memo1)),src:r.imagePaths.win.memo1,class:"screen-image",alt:"memo-1"},null,8,gi)]),pi,di,ki,(0,t._)("div",null,[(0,t._)("img",{onClick:n[25]||(n[25]=l=>r.openModal(r.imagePaths.win.step12)),src:r.imagePaths.win.step12,class:"screen-image",alt:"git-bash-12"},null,8,Ui)]),hi,wi,fi,(0,t._)("div",null,[(0,t._)("img",{onClick:n[26]||(n[26]=l=>r.openModal(r.imagePaths.win.step13)),src:r.imagePaths.win.step13,class:"screen-image",alt:"git-bash-13"},null,8,Pi)]),vi,Ci,Wi,(0,t._)("div",null,[(0,t._)("img",{onClick:n[27]||(n[27]=l=>r.openModal(r.imagePaths.win.step14)),src:r.imagePaths.win.step14,class:"screen-image",alt:"git-bash-14"},null,8,Mi)]),Ti,(0,t._)("p",null,[(0,t.Uk)(" 次にファイルの中身を変えた履歴を確認したいは以下のコマンド使います。"),Gi,xi,(0,t.Wm)(Vr,{word:"git diff"}),Hi,(0,t.Uk)(" ・自分が変更したファイルの差分が見れるコマンド。"),Si,Oi,(0,t.Uk)(" ⑲"),Zi,(0,t.Uk)(" 先ほど記載した「sample.txt」を開き、以下のように内容を変更し保存しましょう。 ")]),Li,(0,t._)("div",null,[(0,t._)("img",{onClick:n[28]||(n[28]=l=>r.openModal(r.imagePaths.win.memo2)),src:r.imagePaths.win.memo2,class:"screen-image",alt:"memo-2"},null,8,yi)]),Ii,Di,Fi,(0,t._)("div",null,[(0,t._)("img",{onClick:n[29]||(n[29]=l=>r.openModal(r.imagePaths.win.step15)),src:r.imagePaths.win.step15,class:"screen-image",alt:"git-bash-15"},null,8,Ki)]),Ri,zi,Bi,(0,t._)("div",null,[(0,t._)("img",{onClick:n[30]||(n[30]=l=>r.openModal(r.imagePaths.win.step16)),src:r.imagePaths.win.step16,class:"screen-image",alt:"git-bash-16"},null,8,qi)]),Ai,(0,t._)("p",null,[(0,t.Uk)(" 最後にコミット履歴を確認したい場合は以下のコマンド使います。"),Ni,ji,(0,t.Wm)(Vr,{word:"git log"}),Ei,(0,t.Uk)(" ・コミット履歴を確認できるコマンド。"),Ji,(0,t.Uk)(" →"),(0,t.Wm)(Vr,{word:"git log -p"}),Qi,(0,t.Uk)(" 「git diff」と同じようなコマンドになるのでこの書き方も覚えておきましょう。"),Vi,Xi,(0,t.Uk)(" ㉒"),Yi,(0,t.Uk)(" それではコマンドを入力しましょう。以下の画像のようにコミット履歴が見られればOKです。"),$i]),lt,(0,t._)("div",null,[(0,t._)("img",{onClick:n[31]||(n[31]=l=>r.openModal(r.imagePaths.win.step17)),src:r.imagePaths.win.step17,class:"screen-image",alt:"git-bash-17"},null,8,nt)]),it,tt,(0,t._)("div",null,[(0,t._)("img",{onClick:n[32]||(n[32]=l=>r.openModal(r.imagePaths.win.step18)),src:r.imagePaths.win.step18,class:"screen-image",alt:"git-bash-18"},null,8,ut)]),et])),_:1}),(0,t.Wm)(Xr,{selectedImage:r.selectedImage,showModal:r.isModalOpen,onCloseModal:n[33]||(n[33]=l=>r.isModalOpen=!1)},null,8,["selectedImage","showModal"])],512),[[e.F8,r.isWindows]]),(0,t.wy)((0,t._)("div",rt,[(0,t.Wm)(jr,{title:"Git 1 (Macの方)",id:"Title-m"}),(0,t.Wm)(Er,null,{default:(0,t.w5)((()=>[st,at])),_:1}),(0,t.Wm)(Jr,{subTitle:"1. Gitについて学ぶ",id:"subTitle1-m"}),(0,t.Wm)(Er,null,{default:(0,t.w5)((()=>[(0,t.Wm)(Qr,{sectionTitle:"1-1. Gitとは?",id:"sectionTitle1-1-m"}),_t,bt,(0,t.Wm)(Vr,{word:"Git"}),mt,ct])),_:1}),(0,t.Wm)(Er,null,{default:(0,t.w5)((()=>[(0,t.Wm)(Qr,{sectionTitle:"1-2. Gitの使い方",id:"sectionTitle1-2-m"}),ot,gt,(0,t._)("div",null,[(0,t._)("img",{onClick:n[34]||(n[34]=l=>r.openModal(r.imagePaths.mac.solo)),src:r.imagePaths.mac.solo,class:"powerpoint-image",alt:"solo"},null,8,pt)]),dt])),_:1}),(0,t.Wm)(Jr,{subTitle:"2. Gitコマンドを覚える",id:"subTitle2-m"}),(0,t.Wm)(Er,null,{default:(0,t.w5)((()=>[(0,t.Wm)(Qr,{sectionTitle:"2-1. GitHubに登録する",id:"sectionTitle2-1-m"}),kt,Ut,(0,t.Wm)(Qr,{sectionTitle:"2-2. Gitの初期設定をする",id:"sectionTitle2-2-m"}),ht,wt,(0,t._)("div",null,[(0,t._)("img",{onClick:n[35]||(n[35]=l=>r.openModal(r.imagePaths.mac.step1)),src:r.imagePaths.mac.step1,class:"screen-image",alt:"terminal-1"},null,8,ft)]),Pt,vt,(0,t._)("div",null,[(0,t._)("img",{onClick:n[36]||(n[36]=l=>r.openModal(r.imagePaths.mac.step2)),src:r.imagePaths.mac.step2,class:"screen-image",alt:"terminal-2"},null,8,Ct)]),Wt,Mt,(0,t.Wm)(Qr,{sectionTitle:"2-3. Gitを準備する",id:"sectionTitle2-3-m"}),Tt,Gt,(0,t._)("div",null,[(0,t._)("img",{onClick:n[37]||(n[37]=l=>r.openModal(r.imagePaths.mac.step3)),src:r.imagePaths.mac.step3,class:"screen-image",alt:"terminal-3"},null,8,xt)]),Ht,(0,t._)("div",null,[(0,t._)("img",{onClick:n[38]||(n[38]=l=>r.openModal(r.imagePaths.mac.folder1)),src:r.imagePaths.mac.folder1,class:"screen-image",alt:"finder-1"},null,8,St)]),Ot,(0,t._)("p",null,[(0,t.Uk)(" 作成した練習ファイルの中でGitを使えるようにしましょう。"),Zt,Lt,(0,t.Wm)(Vr,{word:"git init"}),yt,(0,t.Uk)(" ・gitを使えるようにするコマンド。"),It,(0,t.Uk)(" ローカルリポジトリを新規に作成するという意味もあります。"),Dt,Ft,(0,t.Wm)(Vr,{word:"ローカルリポジトリ"}),Kt,(0,t.Uk)(" ・そのコマンドを入力したフォルダ内のファイルやフォルダを管理できる専用の倉庫。"),Rt,(0,t.Uk)(" この倉庫は自分のパソコン上で作られます。"),zt,Bt,(0,t.Uk)(" 図で表すと以下のようになります。"),qt,At]),(0,t._)("div",null,[(0,t._)("img",{onClick:n[39]||(n[39]=l=>r.openModal(r.imagePaths.mac.init)),src:r.imagePaths.mac.init,class:"screen-image",alt:"init"},null,8,Nt)]),jt,Et,(0,t._)("div",null,[(0,t._)("img",{onClick:n[40]||(n[40]=l=>r.openModal(r.imagePaths.mac.step4)),src:r.imagePaths.mac.step4,class:"screen-image",alt:"terminal-4"},null,8,Jt)]),Qt,(0,t.Wm)(Qr,{sectionTitle:"2-4. 共有場所の準備と登録",id:"sectionTitle2-4-m"}),Vt,(0,t._)("div",null,[(0,t._)("img",{onClick:n[41]||(n[41]=l=>r.openModal(r.imagePaths.mac.github1)),src:r.imagePaths.mac.github1,class:"screen-image",alt:"github-1"},null,8,Xt)]),Yt,$t,(0,t._)("div",null,[(0,t._)("img",{onClick:n[42]||(n[42]=l=>r.openModal(r.imagePaths.mac.github2)),src:r.imagePaths.mac.github2,class:"screen-image",alt:"github-2"},null,8,lu)]),nu,(0,t._)("p",null,[(0,t.Uk)(" このような画面になれば共有場所の作成は完了です。"),iu,(0,t.Uk)(" ではこの共有場所は何か覚えましょう。"),tu,uu,(0,t.Wm)(Vr,{word:"リモートリポジトリ"}),eu,(0,t.Uk)(" ・ローカルリポジトリで管理したフォルダ内のファイルやフォルダを第三者に共有したり、管理ができるWeb上の倉庫。"),ru,su]),(0,t._)("div",null,[(0,t._)("img",{onClick:n[43]||(n[43]=l=>r.openModal(r.imagePaths.mac.github3)),src:r.imagePaths.mac.github3,class:"screen-image",alt:"github-3"},null,8,au)]),_u,bu,(0,t._)("div",null,[(0,t._)("img",{onClick:n[44]||(n[44]=l=>r.openModal(r.imagePaths.mac.state1)),src:r.imagePaths.mac.state1,class:"screen-image",alt:"state-1"},null,8,mu)]),cu,(0,t._)("p",null,[(0,t.Uk)(" 画像にある問題を整理しましょう。"),ou,gu,(0,t.Uk)(" 「git init」で作成したローカルリポジトリに管理されているフォルダはまだ自分のPC上でしか見ることができません。"),pu,(0,t.Uk)(" そのため、リモートリポジトリにアップロードするためには登録が必要になります。"),du,ku,Uu,(0,t.Uk)(" それでは登録のコマンドを覚えましょう。"),hu,wu,(0,t.Wm)(Vr,{word:"git remote add リモートリポジトリ名 URL"}),fu,(0,t.Uk)(" ・リモートリポジトリを登録するコマンド。"),Pu,(0,t.Uk)(" ここで表記されている「リモートリポジトリ名」は、GitHubで作ったリモートリポジトリと通信するために必要なURLを簡単なキーワードにして指定することができます。"),vu,(0,t.Uk)(" デフォルトではoriginという名前で設定することが多いです。"),Cu,Wu,(0,t.Uk)(" 名前を設定するために以下のような手順を踏みましょう。"),Mu,Tu,(0,t.Uk)(" ⑦"),Gu,(0,t.Uk)(" 以下をコピーして実行しましょう。"),xu,Hu]),(0,t._)("div",null,[(0,t._)("img",{onClick:n[45]||(n[45]=l=>r.openModal(r.imagePaths.mac.github4)),src:r.imagePaths.mac.github4,class:"screen-image",alt:"github-4"},null,8,Su)]),Ou,(0,t._)("div",null,[(0,t._)("img",{onClick:n[46]||(n[46]=l=>r.openModal(r.imagePaths.mac.step5)),src:r.imagePaths.mac.step5,class:"screen-image",alt:"terminal-5"},null,8,Zu)]),Lu,(0,t._)("p",null,[(0,t.Uk)(" 登録が完了しました。"),yu,Iu,(0,t.Uk)(" ではGithub(リモートリポジトリ)上にアップロードしましょう！"),Du,(0,t.Uk)(" (1) まだアップロード(共有)してない、またはアップロードしてない編集情報をフォルダやファイルを選択する。"),Fu,(0,t.Uk)(" (2) フォルダやファイルにどのような編集や追加をしたか記録をする"),Ku,(0,t.Uk)(" (3) アップロード(共有)する"),Ru,zu,(0,t.Uk)(" ⑧"),Bu,(0,t.Uk)(" ではアップロードするファイルを選択しましょう。"),qu,Au,(0,t.Wm)(Vr,{word:"git add (フォルダ名)ファイル名"}),Nu,(0,t.Uk)(" ・登録したリモートリポジトリにアップロードするファイルを選択するコマンド。"),ju,Eu,(0,t.Uk)(" ファイルやフォルダすべてを一括で選択する方法。"),Ju,(0,t.Uk)(" →"),(0,t.Wm)(Vr,{word:"git add ."}),Qu,Vu]),(0,t._)("div",null,[(0,t._)("img",{onClick:n[47]||(n[47]=l=>r.openModal(r.imagePaths.mac.step6)),src:r.imagePaths.mac.step6,class:"screen-image",alt:"terminal-6"},null,8,Xu)]),Yu,(0,t._)("p",null,[(0,t.Uk)(" ⑨"),$u,(0,t.Uk)(" 次にフォルダやファイルにどのような編集や追加をしたか記録をしましょう。"),le,ne,(0,t.Wm)(Vr,{word:"git commit -m 'メッセージ'"}),ie,(0,t.Uk)(" ・ファイルをaddコマンドで選択した理由は何か記録するコマンド。"),te,(0,t.Uk)(" メッセージには「□□ファイルの○○を修正」、「△△ファイルの名前を変更」、「××ファイルの作成」などを記載しますが、今回は初めてなので「first commit」や「initialize commit」と入力しましょう。"),ue,ee,(0,t.Uk)(" GitHubにあるコミットコマンドをコピーしコマンドを入力しましょう。"),re,se]),(0,t._)("div",null,[(0,t._)("img",{onClick:n[48]||(n[48]=l=>r.openModal(r.imagePaths.mac.github5)),src:r.imagePaths.mac.github5,class:"screen-image",alt:"github-5"},null,8,ae)]),_e,(0,t._)("div",null,[(0,t._)("img",{onClick:n[49]||(n[49]=l=>r.openModal(r.imagePaths.mac.step7)),src:r.imagePaths.mac.step7,class:"screen-image",alt:"terminal-7"},null,8,be)]),me,(0,t._)("p",null,[(0,t.Uk)(" ⑩"),ce,(0,t.Uk)(" それではアップロードコマンドを入力してください。"),oe,ge,(0,t.Uk)(" アップロードが1回目の場合、少しオプションをつける必要があるため以下を入力しましょう。"),pe,(0,t.Uk)(" →"),(0,t.Wm)(Vr,{word:"git push -u origin main"}),de,(0,t.Uk)(" 2回目以降のアップロードは「-u」のオプションは必要ありません。"),ke,(0,t.Uk)(" また以下のように省略してアップロードすることも出来ます。"),Ue,(0,t.Uk)(" →"),(0,t.Wm)(Vr,{word:"git push"}),he,we]),(0,t._)("div",null,[(0,t._)("img",{onClick:n[50]||(n[50]=l=>r.openModal(r.imagePaths.mac.step8)),src:r.imagePaths.mac.step8,class:"screen-image",alt:"terminal-8"},null,8,fe)]),Pe,ve,(0,t._)("div",null,[(0,t._)("img",{onClick:n[51]||(n[51]=l=>r.openModal(r.imagePaths.mac.github6)),src:r.imagePaths.mac.github6,class:"screen-image",alt:"github-6"},null,8,Ce)]),We,Me,(0,t._)("div",null,[(0,t._)("img",{onClick:n[52]||(n[52]=l=>r.openModal(r.imagePaths.mac.state2)),src:r.imagePaths.mac.state2,class:"screen-image",alt:"state-2"},null,8,Te)]),Ge,xe])),_:1}),(0,t.Wm)(Jr,{subTitle:"3. ファイルの状態を確認する",id:"subTitle3-m"}),(0,t.Wm)(Er,null,{default:(0,t.w5)((()=>[(0,t.Wm)(Qr,{sectionTitle:"3-1. 変更したファイルの確認方法",id:"sectionTitle3-1-m"}),(0,t._)("p",null,[(0,t.Uk)(" 先ほどの一連の流れを行うと自分がadd,commitなどをしたのかわからなくなってしまうことがあります。"),He,(0,t.Uk)(" そのために必要なファイルの状態を確認するコマンドを学びましょう。"),Se,Oe,(0,t.Wm)(Vr,{word:"git status"}),Ze,(0,t.Uk)(" ・自分が変更したファイルの状況を確認できるコマンド。"),Le,ye,(0,t.Uk)(" ⑫"),Ie,(0,t.Uk)(" では新しいファイルをtouchコマンドで作成しましょう。 ")]),(0,t._)("div",null,[De,(0,t._)("img",{onClick:n[53]||(n[53]=l=>r.openModal(r.imagePaths.mac.step9)),src:r.imagePaths.mac.step9,class:"screen-image",alt:"terminal-9"},null,8,Fe)]),Ke,Re,ze,(0,t._)("div",null,[(0,t._)("img",{onClick:n[54]||(n[54]=l=>r.openModal(r.imagePaths.mac.step10)),src:r.imagePaths.mac.step10,class:"screen-image",alt:"terminal-10"},null,8,Be)]),qe,Ae,Ne,(0,t._)("div",null,[(0,t._)("img",{onClick:n[55]||(n[55]=l=>r.openModal(r.imagePaths.mac.folder2)),src:r.imagePaths.mac.folder2,class:"screen-image",alt:"finder-2"},null,8,je)]),Ee,(0,t._)("div",null,[(0,t._)("img",{onClick:n[56]||(n[56]=l=>r.openModal(r.imagePaths.mac.memo1)),src:r.imagePaths.mac.memo1,class:"screen-image",alt:"memo-1"},null,8,Je)]),Qe,Ve,Xe,(0,t._)("div",null,[(0,t._)("img",{onClick:n[57]||(n[57]=l=>r.openModal(r.imagePaths.mac.step11)),src:r.imagePaths.mac.step11,class:"screen-image",alt:"terminal-11"},null,8,Ye)]),$e,lr,nr,(0,t._)("div",null,[(0,t._)("img",{onClick:n[58]||(n[58]=l=>r.openModal(r.imagePaths.mac.step12)),src:r.imagePaths.mac.step12,class:"screen-image",alt:"terminal-12"},null,8,ir)]),tr,ur,er,(0,t._)("div",null,[(0,t._)("img",{onClick:n[59]||(n[59]=l=>r.openModal(r.imagePaths.mac.step13)),src:r.imagePaths.mac.step13,class:"screen-image",alt:"terminal-13"},null,8,rr)]),sr,(0,t._)("p",null,[(0,t.Uk)(" 次にファイルの中身を変えた履歴を確認したいは以下のコマンド使います。"),ar,_r,(0,t.Wm)(Vr,{word:"git diff"}),br,(0,t.Uk)(" ・自分が変更したファイルの差分が見れるコマンド。"),mr,cr,(0,t.Uk)(" ⑱"),or,(0,t.Uk)(" 先ほど記載した「sample.txt」を開き、以下のように内容を変更し保存しましょう。 ")]),gr,(0,t._)("div",null,[(0,t._)("img",{onClick:n[60]||(n[60]=l=>r.openModal(r.imagePaths.mac.memo2)),src:r.imagePaths.mac.memo2,class:"screen-image",alt:"memo-2"},null,8,pr)]),dr,kr,Ur,(0,t._)("div",null,[(0,t._)("img",{onClick:n[61]||(n[61]=l=>r.openModal(r.imagePaths.mac.step14)),src:r.imagePaths.mac.step14,class:"screen-image",alt:"terminal-14"},null,8,hr)]),wr,fr,Pr,(0,t._)("div",null,[(0,t._)("img",{onClick:n[62]||(n[62]=l=>r.openModal(r.imagePaths.mac.step15)),src:r.imagePaths.mac.step15,class:"screen-image",alt:"terminal-15"},null,8,vr)]),Cr,(0,t._)("p",null,[(0,t.Uk)(" 最後にコミット履歴を確認したい場合は以下のコマンド使います。"),Wr,Mr,(0,t.Wm)(Vr,{word:"git log"}),Tr,(0,t.Uk)(" ・コミット履歴を確認できるコマンド。"),Gr,(0,t.Uk)(" →"),(0,t.Wm)(Vr,{word:"git log -p"}),xr,(0,t.Uk)(" 「git diff」と同じようなコマンドになるのでこの書き方も覚えておきましょう。"),Hr,Sr,(0,t.Uk)(" ㉑"),Or,(0,t.Uk)(" それではコマンドを入力しましょう。以下の画像のようにコミット履歴が見られればOKです。"),Zr]),Lr,(0,t._)("div",null,[(0,t._)("img",{onClick:n[63]||(n[63]=l=>r.openModal(r.imagePaths.mac.step16)),src:r.imagePaths.mac.step16,class:"screen-image",alt:"terminal-16"},null,8,yr)]),Ir,Dr,(0,t._)("div",null,[(0,t._)("img",{onClick:n[64]||(n[64]=l=>r.openModal(r.imagePaths.mac.step17)),src:r.imagePaths.mac.step17,class:"screen-image",alt:"terminal-17"},null,8,Fr)]),Kr])),_:1}),(0,t.Wm)(Xr,{selectedImage:r.selectedImage,showModal:r.isModalOpen,onCloseModal:n[65]||(n[65]=l=>r.isModalOpen=!1)},null,8,["selectedImage","showModal"])],512),[[e.F8,!r.isWindows]]),(0,t.wy)((0,t._)("div",Rr,[(0,t.Wm)(Yr,{sections:r.windowsSections},null,8,["sections"])],512),[[e.F8,r.isWindows&&!r.isSmallScreen]]),(0,t.wy)((0,t._)("div",zr,[(0,t.Wm)(Yr,{sections:r.macSections},null,8,["sections"])],512),[[e.F8,!r.isWindows&&!r.isSmallScreen]])]),(0,t.Wm)($r)])}var qr=i(2262),Ar=i(21124),Nr=i(40543),jr=i(44216),Er=i(1755),Jr=i(18231),Qr=i(14332),Vr=i(25212),Xr=i(4066),Yr=i(57672),$r=i(46541),ls={name:"CommandLine1",components:{Header:Ar.Z,Footer:Nr.Z,Title:jr.Z,SubTitle:Er.Z,SectionTitle:Jr.Z,HighlightWord:Qr.Z,Document:Vr.Z,TableOfContents:Xr.Z,Spinner:Yr.Z,Modal:$r.Z},setup(){const l=(0,qr.iH)(!0),n=(0,qr.iH)(!1),u=(0,qr.iH)(!1),e=[{id:"Title-w",title:"Git 1 (Windowsの方)"},{id:"subTitle1-w",title:"  1. Gitについて学ぶ"},{id:"sectionTitle1-1-w",title:"    1-1. Gitとは?"},{id:"sectionTitle1-2-w",title:"    1-2. Gitの使い方"},{id:"subTitle2-w",title:"  2. Gitコマンドを覚える"},{id:"sectionTitle2-1-w",title:"    2-1. GitHubに登録する"},{id:"sectionTitle2-2-w",title:"    2-2. Gitの初期設定をする"},{id:"sectionTitle2-3-w",title:"    2-3. Gitを準備する"},{id:"sectionTitle2-4-w",title:"    2-4. 共有場所の準備と登録"},{id:"subTitle3-w",title:"  3. ファイルの状態を確認する"},{id:"sectionTitle3-1-w",title:"    3-1. 変更したファイルの確認方法"}],r=[{id:"Title-m",title:"Git 1 (Macの方)"},{id:"subTitle1-m",title:"  1. Gitについて学ぶ"},{id:"sectionTitle1-1-m",title:"    1-1. Gitとは?"},{id:"sectionTitle1-2-m",title:"    1-2. Gitの使い方"},{id:"subTitle2-m",title:"  2. Gitコマンドを覚える"},{id:"sectionTitle2-1-m",title:"    2-1. GitHubに登録する"},{id:"sectionTitle2-2-m",title:"    2-2. Gitの初期設定をする"},{id:"sectionTitle2-3-m",title:"    2-3. Gitを準備する"},{id:"sectionTitle2-4-m",title:"    2-4. 共有場所の準備と登録"},{id:"subTitle3-m",title:"  3. ファイルの状態を確認する"},{id:"sectionTitle3-1-m",title:"    3-1. 変更したファイルの確認方法"}],s=()=>{u.value=!0,setTimeout((()=>{u.value=!1,l.value=!l.value}),1e3)};(0,t.bv)((()=>{window.scrollTo(0,0)}));const a={win:{solo:i(66949),step1:i(84261),step2:i(23423),step3:i(86631),folder1:i(3231),init:i(80511),step4:i(85961),github1:i(99720),github2:i(63742),github3:i(33707),state1:i(29310),github4:i(29011),step5:i(56286),step6:i(13765),github5:i(1300),step7:i(73220),step8:i(77249),step9:i(31540),github6:i(98538),state2:i(28423),step10:i(15232),step11:i(50104),folder2:i(85116),memo1:i(31634),step12:i(52363),step13:i(16165),step14:i(57592),memo2:i(91931),step15:i(97928),step16:i(3226),step17:i(68984),step18:i(7046)},mac:{solo:i(66949),step1:i(91660),step2:i(54904),step3:i(47836),folder1:i(35742),init:i(80511),step4:i(30390),github1:i(99720),github2:i(63742),github3:i(33707),state1:i(29310),github4:i(29011),step5:i(26486),step6:i(13369),github5:i(1300),step7:i(72425),step8:i(53250),step9:i(33730),github6:i(98538),state2:i(28423),step10:i(72122),step11:i(69993),folder2:i(80307),memo1:i(28772),step12:i(5228),step13:i(81766),step14:i(96417),memo2:i(12762),step15:i(72307),step16:i(40876),step17:i(76483)}},_=(0,qr.iH)(!1),b=(0,qr.iH)(),m=l=>{_.value=!0,b.value=l};return{isWindows:l,isSmallScreen:n,isLoading:u,windowsSections:e,macSections:r,imagePaths:a,selectedImage:b,isModalOpen:_,toggleOS:s,openModal:m}}},ns=i(83744);const is=(0,ns.Z)(ls,[["render",Br],["__scopeId","data-v-7c1e06ae"]]);var ts=is},35742:function(l,n,i){l.exports=i.p+"img/finder-1.4111ef5b.png"},80307:function(l,n,i){l.exports=i.p+"img/finder-2.0f22ff09.png"},3231:function(l,n,i){l.exports=i.p+"img/folder-1.592d57f4.png"},85116:function(l,n,i){l.exports=i.p+"img/folder-2.2d864270.png"},84261:function(l,n,i){l.exports=i.p+"img/git-bash-1.47dde7ff.png"},15232:function(l,n,i){l.exports=i.p+"img/git-bash-10.7850d6ff.png"},50104:function(l,n,i){l.exports=i.p+"img/git-bash-11.2a252f08.png"},52363:function(l,n,i){l.exports=i.p+"img/git-bash-12.10cbd23f.png"},16165:function(l,n,i){l.exports=i.p+"img/git-bash-13.22ea7294.png"},57592:function(l,n,i){l.exports=i.p+"img/git-bash-14.a6990009.png"},97928:function(l,n,i){l.exports=i.p+"img/git-bash-15.973b43d2.png"},3226:function(l,n,i){l.exports=i.p+"img/git-bash-16.9c679dfc.png"},68984:function(l,n,i){l.exports=i.p+"img/git-bash-17.7dda6679.png"},7046:function(l,n,i){l.exports=i.p+"img/git-bash-18.3ff359c1.png"},23423:function(l,n,i){l.exports=i.p+"img/git-bash-2.61ee3b31.png"},86631:function(l,n,i){l.exports=i.p+"img/git-bash-3.2a62169b.png"},85961:function(l,n,i){l.exports=i.p+"img/git-bash-4.8136c759.png"},56286:function(l,n,i){l.exports=i.p+"img/git-bash-5.41dffb1a.png"},13765:function(l,n,i){l.exports=i.p+"img/git-bash-6.867c710d.png"},73220:function(l,n,i){l.exports=i.p+"img/git-bash-7.8749466b.png"},77249:function(l,n,i){l.exports=i.p+"img/git-bash-8.26d31efd.png"},31540:function(l,n,i){l.exports=i.p+"img/git-bash-9.a124c089.png"},80511:function(l,n,i){l.exports=i.p+"img/git-init.2d404443.png"},99720:function(l,n,i){l.exports=i.p+"img/github-1.e6ce2021.png"},63742:function(l,n,i){l.exports=i.p+"img/github-2.02780519.png"},33707:function(l,n,i){l.exports=i.p+"img/github-3.eeca54a1.png"},29011:function(l,n,i){l.exports=i.p+"img/github-4.ed029e13.png"},1300:function(l,n,i){l.exports=i.p+"img/github-5.92f88efe.png"},98538:function(l,n,i){l.exports=i.p+"img/github-6.ec9b0785.png"},28772:function(l,n,i){l.exports=i.p+"img/memo-1-m.34ee0f48.png"},31634:function(l,n,i){l.exports=i.p+"img/memo-1-w.5175ed47.png"},12762:function(l,n,i){l.exports=i.p+"img/memo-2-m.d5c4ab48.png"},91931:function(l,n,i){l.exports=i.p+"img/memo-2-w.b77c7915.png"},66949:function(l,n,i){l.exports=i.p+"img/solo.82386517.png"},29310:function(l,n,i){l.exports=i.p+"img/state-1.4a0db9c2.png"},28423:function(l,n,i){l.exports=i.p+"img/state-2.d2ad2ee3.png"},91660:function(l,n,i){l.exports=i.p+"img/terminal-1.be3ea670.png"},72122:function(l,n,i){l.exports=i.p+"img/terminal-10.6fa065fe.png"},69993:function(l,n,i){l.exports=i.p+"img/terminal-11.e710dd17.png"},5228:function(l,n,i){l.exports=i.p+"img/terminal-12.269950e6.png"},81766:function(l,n,i){l.exports=i.p+"img/terminal-13.692f4126.png"},96417:function(l,n,i){l.exports=i.p+"img/terminal-14.f2cd42ae.png"},72307:function(l,n,i){l.exports=i.p+"img/terminal-15.9bd5b518.png"},40876:function(l,n,i){l.exports=i.p+"img/terminal-16.62b85a2b.png"},76483:function(l,n,i){l.exports=i.p+"img/terminal-17.e298a70a.png"},54904:function(l,n,i){l.exports=i.p+"img/terminal-2.785064c7.png"},47836:function(l,n,i){l.exports=i.p+"img/terminal-3.89b9b156.png"},30390:function(l,n,i){l.exports=i.p+"img/terminal-4.4033b9a9.png"},26486:function(l,n,i){l.exports=i.p+"img/terminal-5.d084be17.png"},13369:function(l,n,i){l.exports=i.p+"img/terminal-6.3ba441d4.png"},72425:function(l,n,i){l.exports=i.p+"img/terminal-7.73920efe.png"},53250:function(l,n,i){l.exports=i.p+"img/terminal-8.558e9c1c.png"},33730:function(l,n,i){l.exports=i.p+"img/terminal-9.54cb03be.png"}}]);
//# sourceMappingURL=565.a8473fff.js.map