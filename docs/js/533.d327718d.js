"use strict";(self["webpackChunkgrow_curriculum"]=self["webpackChunkgrow_curriculum"]||[]).push([[533],{14332:function(l,n,i){i.d(n,{Z:function(){return c}});var u=i(66252),t=i(3577);const e={class:"highlighted"},s={class:"highlighted-word"};function r(l,n,i,r,a,_){return(0,u.wg)(),(0,u.iD)("div",e,[(0,u._)("p",s,(0,t.zw)(i.word),1)])}var a={props:{word:{type:String,required:!0}}},_=i(83744);const b=(0,_.Z)(a,[["render",r],["__scopeId","data-v-5f382e4a"]]);var c=b},57672:function(l,n,i){i.d(n,{Z:function(){return m}});var u=i(66252);const t={key:0,class:"spinner-container"},e=(0,u._)("h1",{class:"spinner-text"},"Loading...",-1),s=(0,u._)("div",{class:"spinner"},null,-1),r=[e,s];function a(l,n,i,e,s,a){return i.isLoading?((0,u.wg)(),(0,u.iD)("div",t,r)):(0,u.kq)("",!0)}var _={props:{isLoading:{type:Boolean,default:!1}}},b=i(83744);const c=(0,b.Z)(_,[["render",a]]);var m=c},97571:function(l,n,i){i.r(n),i.d(n,{default:function(){return wr}});var u=i(66252),t=i(3577),e=i(49963);const s=l=>((0,u.dD)("data-v-6005978a"),l=l(),(0,u.Cn)(),l),r={class:"container"},a={class:"main-content"},_=s((()=>(0,u._)("p",null,"Gitのコマンド基本的な操作と考え方を学びましょう。",-1))),b=s((()=>(0,u._)("p",null,"まずはどういったものなのか図と照らし合わせながら覚えていきましょう！",-1))),c=s((()=>(0,u._)("p",null,[(0,u.Uk)(" 皆さんがこれから学ぶ「コマンドライン」について概要を理解しましょう!"),(0,u._)("br")],-1))),m=s((()=>(0,u._)("br",null,null,-1))),o=s((()=>(0,u._)("p",null,[(0,u.Uk)(" ・分散型バージョン管理システム。"),(0,u._)("br"),(0,u.Uk)(" コンピュータ上のファイルに発生した変更を記録し、履歴を管理してくれる便利なツールになります。 "),(0,u._)("br"),(0,u._)("br"),(0,u.Uk)(" ではGitというのは具体的にどのように使うものなのか深掘りしていきましょう! ")],-1))),g=s((()=>(0,u._)("br",null,null,-1))),p=s((()=>(0,u._)("p",null,[(0,u.Uk)(" 例えば、この様にフォルダの中に3つのファイルがあるとしましょう。"),(0,u._)("br"),(0,u._)("br"),(0,u.Uk)(" これらのファイルの作業を行うときすべてAさんという人だけで行うとするととても時間がかかってしまいます。"),(0,u._)("br"),(0,u.Uk)(" そのため、BさんやCさんなどを入れて分担作業して作業する方が効率的になります。"),(0,u._)("br"),(0,u._)("br"),(0,u.Uk)(" Gitはその管理をしやすくするツールだと覚えておきましょう。"),(0,u._)("br")],-1))),d=s((()=>(0,u._)("br",null,null,-1))),k=["src"],h=s((()=>(0,u._)("br",null,null,-1))),U=s((()=>(0,u._)("p",null,[(0,u.Uk)(" Gitを使えるように準備をしましょう。"),(0,u._)("br"),(0,u.Uk)(" まずはGitHubというサイトで新規登録を行いましょう。"),(0,u._)("br"),(0,u._)("br")],-1))),w=s((()=>(0,u._)("div",{class:"download"},[(0,u._)("a",{class:"download-link",href:"https://github.com/"},"GitHubで新規登録を行う"),(0,u._)("br"),(0,u._)("br"),(0,u._)("br"),(0,u._)("br")],-1))),P=s((()=>(0,u._)("p",null,[(0,u.Uk)(" 新規登録をおこなったら初期設定をしましょう。"),(0,u._)("br"),(0,u.Uk)(" このコマンドはGitHubアカウントを変えない限り変えることはなくほとんど変えることはないのでので覚えなくても大丈夫です。"),(0,u._)("br"),(0,u._)("br"),(0,u.Uk)(" ①"),(0,u._)("br"),(0,u.Uk)(" 「環境構築やインストール」でインストールした「git bash」を開きましょう。 開くとこのような画面になります。 ")],-1))),f=s((()=>(0,u._)("br",null,null,-1))),v=["src"],C=s((()=>(0,u._)("br",null,null,-1))),W=s((()=>(0,u._)("p",null,[(0,u.Uk)(" ②"),(0,u._)("br"),(0,u.Uk)(" 開いたらCドライブに移動しましょう。"),(0,u._)("br"),(0,u.Uk)(" 移動したらユーザー名とメールアドレスを設定しましょう。"),(0,u._)("br"),(0,u.Uk)(" 以下の画像のようにすべて入力して実行しましょう。"),(0,u._)("br"),(0,u._)("br")],-1))),M=["src"],T=s((()=>(0,u._)("br",null,null,-1))),G=s((()=>(0,u._)("p",null,[(0,u.Uk)(" 初期設定は以上で完了です。"),(0,u._)("br"),(0,u._)("br")],-1))),x=s((()=>(0,u._)("p",null,[(0,u._)("br"),(0,u.Uk)(" では今回Gitを学習するための練習フォルダとファイルを作成しましょう。"),(0,u._)("br"),(0,u._)("br"),(0,u.Uk)(" ③"),(0,u._)("br"),(0,u.Uk)(" Cドライブに以下のフォルダを作成してください。"),(0,u._)("br"),(0,u.Uk)(" 作成したらそのフォルダに移動してテキストファイルを作成しましょう。"),(0,u._)("br"),(0,u.Uk)(" エクスプローラで作成したフォルダの「git-practice」を確認すると以下のようにテキストファイルが作成されています。"),(0,u._)("br")],-1))),H=s((()=>(0,u._)("br",null,null,-1))),S=["src"],O=s((()=>(0,u._)("br",null,null,-1))),Z=["src"],L=s((()=>(0,u._)("br",null,null,-1))),y=s((()=>(0,u._)("br",null,null,-1))),I=s((()=>(0,u._)("br",null,null,-1))),D=s((()=>(0,u._)("br",null,null,-1))),F=s((()=>(0,u._)("br",null,null,-1))),K=s((()=>(0,u._)("br",null,null,-1))),R=s((()=>(0,u._)("br",null,null,-1))),z=s((()=>(0,u._)("br",null,null,-1))),B=s((()=>(0,u._)("br",null,null,-1))),q=s((()=>(0,u._)("br",null,null,-1))),A=s((()=>(0,u._)("br",null,null,-1))),N=s((()=>(0,u._)("br",null,null,-1))),j=s((()=>(0,u._)("br",null,null,-1))),E=["src"],J=s((()=>(0,u._)("br",null,null,-1))),Q=s((()=>(0,u._)("p",null,[(0,u.Uk)(" ④"),(0,u._)("br"),(0,u.Uk)(" それではコマンドを入力しましょう。"),(0,u._)("br"),(0,u.Uk)(" 以下のようになればOKです。"),(0,u._)("br"),(0,u._)("br")],-1))),V=["src"],X=s((()=>(0,u._)("br",null,null,-1))),Y=s((()=>(0,u._)("p",null,[(0,u.Uk)(" では自分のPC上で作成したファイルを他の人に共有できるようにウェブ上に共有場所を作成しましょう。"),(0,u._)("br"),(0,u._)("br"),(0,u.Uk)(" ⑤"),(0,u._)("br"),(0,u.Uk)(" 先ほど登録したGitHubを開きましょう。"),(0,u._)("br"),(0,u.Uk)(" その次に左にある「New」ボタンを押しましょう。"),(0,u._)("br"),(0,u._)("br")],-1))),$=["src"],ll=s((()=>(0,u._)("br",null,null,-1))),nl=s((()=>(0,u._)("p",null,[(0,u.Uk)(" ⑥"),(0,u._)("br"),(0,u.Uk)(" 次に「Repository name」に「git-practice」と入力しましょう。"),(0,u._)("br"),(0,u.Uk)(" 「Description」は入力しなくても大丈夫です。"),(0,u._)("br"),(0,u.Uk)(" リポジトリのタイプは「public」を選択しましょう。"),(0,u._)("br"),(0,u._)("br"),(0,u.Uk)(" 下の残りの設定はそのままで「Create repository」を押しましょう。"),(0,u._)("br"),(0,u._)("br")],-1))),il=["src"],ul=s((()=>(0,u._)("br",null,null,-1))),tl=s((()=>(0,u._)("br",null,null,-1))),el=s((()=>(0,u._)("br",null,null,-1))),sl=s((()=>(0,u._)("br",null,null,-1))),rl=s((()=>(0,u._)("br",null,null,-1))),al=s((()=>(0,u._)("br",null,null,-1))),_l=s((()=>(0,u._)("br",null,null,-1))),bl=["src"],cl=s((()=>(0,u._)("br",null,null,-1))),ml=s((()=>(0,u._)("p",null,[(0,u.Uk)(" まずは今の状態を確認しましょう。"),(0,u._)("br"),(0,u._)("br")],-1))),ol=["src"],gl=s((()=>(0,u._)("br",null,null,-1))),pl=s((()=>(0,u._)("br",null,null,-1))),dl=s((()=>(0,u._)("br",null,null,-1))),kl=s((()=>(0,u._)("br",null,null,-1))),hl=s((()=>(0,u._)("br",null,null,-1))),Ul=s((()=>(0,u._)("br",null,null,-1))),wl=s((()=>(0,u._)("br",null,null,-1))),Pl=s((()=>(0,u._)("br",null,null,-1))),fl=s((()=>(0,u._)("br",null,null,-1))),vl=s((()=>(0,u._)("br",null,null,-1))),Cl=s((()=>(0,u._)("br",null,null,-1))),Wl=s((()=>(0,u._)("br",null,null,-1))),Ml=s((()=>(0,u._)("br",null,null,-1))),Tl=s((()=>(0,u._)("br",null,null,-1))),Gl=s((()=>(0,u._)("br",null,null,-1))),xl=s((()=>(0,u._)("br",null,null,-1))),Hl=s((()=>(0,u._)("br",null,null,-1))),Sl=s((()=>(0,u._)("br",null,null,-1))),Ol=s((()=>(0,u._)("br",null,null,-1))),Zl=["src"],Ll=s((()=>(0,u._)("br",null,null,-1))),yl=["src"],Il=s((()=>(0,u._)("br",null,null,-1))),Dl=s((()=>(0,u._)("br",null,null,-1))),Fl=s((()=>(0,u._)("br",null,null,-1))),Kl=s((()=>(0,u._)("br",null,null,-1))),Rl=s((()=>(0,u._)("br",null,null,-1))),zl=s((()=>(0,u._)("br",null,null,-1))),Bl=s((()=>(0,u._)("br",null,null,-1))),ql=s((()=>(0,u._)("br",null,null,-1))),Al=s((()=>(0,u._)("br",null,null,-1))),Nl=s((()=>(0,u._)("br",null,null,-1))),jl=s((()=>(0,u._)("br",null,null,-1))),El=s((()=>(0,u._)("br",null,null,-1))),Jl=s((()=>(0,u._)("br",null,null,-1))),Ql=s((()=>(0,u._)("br",null,null,-1))),Vl=s((()=>(0,u._)("br",null,null,-1))),Xl=s((()=>(0,u._)("br",null,null,-1))),Yl=s((()=>(0,u._)("br",null,null,-1))),$l=["src"],ln=s((()=>(0,u._)("br",null,null,-1))),nn=s((()=>(0,u._)("br",null,null,-1))),un=s((()=>(0,u._)("br",null,null,-1))),tn=s((()=>(0,u._)("br",null,null,-1))),en=s((()=>(0,u._)("br",null,null,-1))),sn=s((()=>(0,u._)("br",null,null,-1))),rn=s((()=>(0,u._)("br",null,null,-1))),an=s((()=>(0,u._)("br",null,null,-1))),_n=s((()=>(0,u._)("br",null,null,-1))),bn=s((()=>(0,u._)("br",null,null,-1))),cn=["src"],mn=s((()=>(0,u._)("br",null,null,-1))),on=["src"],gn=s((()=>(0,u._)("br",null,null,-1))),pn=s((()=>(0,u._)("br",null,null,-1))),dn=s((()=>(0,u._)("br",null,null,-1))),kn=s((()=>(0,u._)("br",null,null,-1))),hn=s((()=>(0,u._)("br",null,null,-1))),Un=s((()=>(0,u._)("br",null,null,-1))),wn=s((()=>(0,u._)("br",null,null,-1))),Pn=s((()=>(0,u._)("br",null,null,-1))),fn=s((()=>(0,u._)("br",null,null,-1))),vn=s((()=>(0,u._)("br",null,null,-1))),Cn=s((()=>(0,u._)("br",null,null,-1))),Wn=s((()=>(0,u._)("br",null,null,-1))),Mn=s((()=>(0,u._)("br",null,null,-1))),Tn=s((()=>(0,u._)("br",null,null,-1))),Gn=s((()=>(0,u._)("br",null,null,-1))),xn=s((()=>(0,u._)("br",null,null,-1))),Hn=["src"],Sn=s((()=>(0,u._)("br",null,null,-1))),On=s((()=>(0,u._)("br",null,null,-1))),Zn=s((()=>(0,u._)("br",null,null,-1))),Ln=s((()=>(0,u._)("br",null,null,-1))),yn=s((()=>(0,u._)("br",null,null,-1))),In=s((()=>(0,u._)("br",null,null,-1))),Dn=s((()=>(0,u._)("br",null,null,-1))),Fn=s((()=>(0,u._)("br",null,null,-1))),Kn=s((()=>(0,u._)("br",null,null,-1))),Rn=s((()=>(0,u._)("br",null,null,-1))),zn=["src"],Bn=s((()=>(0,u._)("br",null,null,-1))),qn=s((()=>(0,u._)("p",null,[(0,u.Uk)(" ⑫"),(0,u._)("br"),(0,u.Uk)(" ではGithubでアップロードできた確認してみましょう。"),(0,u._)("br"),(0,u.Uk)(" Githubのページを更新すると以下のようにテキストファイルがアップロードされています。"),(0,u._)("br"),(0,u._)("br")],-1))),An=["src"],Nn=s((()=>(0,u._)("br",null,null,-1))),jn=s((()=>(0,u._)("p",null,[(0,u.Uk)(" ではここまでの流れを図で覚えましょう。"),(0,u._)("br"),(0,u._)("br")],-1))),En=["src"],Jn=s((()=>(0,u._)("br",null,null,-1))),Qn=s((()=>(0,u._)("p",null,[(0,u.Uk)(" Gitの管理下に置かれた、実際に作業をしているディレクトリのことをワークツリーと呼びます。"),(0,u._)("br"),(0,u._)("br"),(0,u.Uk)(" このワークツリーで編集、追加したファイルやフォルダを「git add」コマンドを使い選択します。"),(0,u._)("br"),(0,u.Uk)(" この操作をステージングと呼び、選択したファイルはインデックスという箱で管理されます。"),(0,u._)("br"),(0,u.Uk)(" そして、このファイルをどのような理由で選択したのか記録(git commit)し、リモートリポジトリに共有します。(git push)。"),(0,u._)("br"),(0,u.Uk)(" この一連の流れは必ず覚えましょう。"),(0,u._)("br"),(0,u._)("br"),(0,u.Uk)(" また、この操作はファイルを編集したり追加するたびにリモートリポジトリに更新する必要があるので「git add」、「git commit」、「git push」を行いましょう。"),(0,u._)("br")],-1))),Vn=s((()=>(0,u._)("br",null,null,-1))),Xn=s((()=>(0,u._)("br",null,null,-1))),Yn=s((()=>(0,u._)("br",null,null,-1))),$n=s((()=>(0,u._)("br",null,null,-1))),li=s((()=>(0,u._)("br",null,null,-1))),ni=s((()=>(0,u._)("br",null,null,-1))),ii=s((()=>(0,u._)("br",null,null,-1))),ui=s((()=>(0,u._)("br",null,null,-1))),ti=["src"],ei=s((()=>(0,u._)("br",null,null,-1))),si=s((()=>(0,u._)("p",null,[(0,u.Uk)(" ⑭"),(0,u._)("br"),(0,u.Uk)(" gitのステータスを確認してみましょう。"),(0,u._)("br"),(0,u.Uk)(" これは追跡できていない新しいファイルがあることを意味しています。"),(0,u._)("br")],-1))),ri=s((()=>(0,u._)("br",null,null,-1))),ai=["src"],_i=s((()=>(0,u._)("br",null,null,-1))),bi=s((()=>(0,u._)("p",null,[(0,u.Uk)(" ⑮"),(0,u._)("br"),(0,u.Uk)(" では次にエクスプローラから「sample.txt」を開きましょう。"),(0,u._)("br"),(0,u.Uk)(" 開いたら以下のように編集し、保存(ctrl + S)してください。"),(0,u._)("br")],-1))),ci=s((()=>(0,u._)("br",null,null,-1))),mi=["src"],oi=s((()=>(0,u._)("br",null,null,-1))),gi=["src"],pi=s((()=>(0,u._)("br",null,null,-1))),di=s((()=>(0,u._)("p",null,[(0,u.Uk)(" ⑭"),(0,u._)("br"),(0,u.Uk)(" gitのステータスを確認してみましょう。"),(0,u._)("br"),(0,u.Uk)(" 赤色で「modified」という部分が増えました。"),(0,u._)("br"),(0,u.Uk)("これは編集(修正)はされたが「git add」ができていない事を意味しています。"),(0,u._)("br")],-1))),ki=s((()=>(0,u._)("br",null,null,-1))),hi=["src"],Ui=s((()=>(0,u._)("br",null,null,-1))),wi=s((()=>(0,u._)("p",null,[(0,u.Uk)(" ⑮"),(0,u._)("br"),(0,u.Uk)(" では「git add .」を行った後にgitのステータスを確認してみましょう。"),(0,u._)("br"),(0,u.Uk)(" すると今度は緑色で「modified」という部分が増えました。これは編集(修正)はされたが「git commit」ができていない事を意味しています。"),(0,u._)("br")],-1))),Pi=s((()=>(0,u._)("br",null,null,-1))),fi=["src"],vi=s((()=>(0,u._)("br",null,null,-1))),Ci=s((()=>(0,u._)("p",null,[(0,u.Uk)(" ⑯"),(0,u._)("br"),(0,u.Uk)(" では次に「git commit」を行った後にgitのステータスを確認してみましょう。"),(0,u._)("br"),(0,u.Uk)(" すると今度は白色で文章が表示されました。これは「git commit」まで終わり、コミット対象が無い事を意味しています。"),(0,u._)("br")],-1))),Wi=s((()=>(0,u._)("br",null,null,-1))),Mi=["src"],Ti=s((()=>(0,u._)("br",null,null,-1))),Gi=s((()=>(0,u._)("br",null,null,-1))),xi=s((()=>(0,u._)("br",null,null,-1))),Hi=s((()=>(0,u._)("br",null,null,-1))),Si=s((()=>(0,u._)("br",null,null,-1))),Oi=s((()=>(0,u._)("br",null,null,-1))),Zi=s((()=>(0,u._)("br",null,null,-1))),Li=s((()=>(0,u._)("br",null,null,-1))),yi=["src"],Ii=s((()=>(0,u._)("br",null,null,-1))),Di=s((()=>(0,u._)("p",null,[(0,u.Uk)(" ⑱"),(0,u._)("br"),(0,u.Uk)(" 「git diff」コマンドを入力しましょう。"),(0,u._)("br"),(0,u.Uk)(" 緑色で書かれている部分は今回の修正内容です。赤色は修正前の内容です。"),(0,u._)("br")],-1))),Fi=s((()=>(0,u._)("br",null,null,-1))),Ki=["src"],Ri=s((()=>(0,u._)("br",null,null,-1))),zi=s((()=>(0,u._)("p",null,[(0,u.Uk)(" ⑲"),(0,u._)("br"),(0,u.Uk)(" 差分が見れたところで「git add」と「git commit」を行いましょう。"),(0,u._)("br"),(0,u.Uk)(" 以下の画像のようになればOKです。"),(0,u._)("br")],-1))),Bi=s((()=>(0,u._)("br",null,null,-1))),qi=["src"],Ai=s((()=>(0,u._)("br",null,null,-1))),Ni=s((()=>(0,u._)("br",null,null,-1))),ji=s((()=>(0,u._)("br",null,null,-1))),Ei=s((()=>(0,u._)("br",null,null,-1))),Ji=s((()=>(0,u._)("br",null,null,-1))),Qi=s((()=>(0,u._)("br",null,null,-1))),Vi=s((()=>(0,u._)("br",null,null,-1))),Xi=s((()=>(0,u._)("br",null,null,-1))),Yi=s((()=>(0,u._)("br",null,null,-1))),$i=s((()=>(0,u._)("br",null,null,-1))),lu=s((()=>(0,u._)("br",null,null,-1))),nu=["src"],iu=s((()=>(0,u._)("br",null,null,-1))),uu=s((()=>(0,u._)("p",null,[(0,u.Uk)(" ㉑"),(0,u._)("br"),(0,u.Uk)(" 最後にファイルを追加し、ファイルの中身を編集した情報を「git push」でアップロードしましょう。"),(0,u._)("br"),(0,u.Uk)(" これでlesson-1は終了です。"),(0,u._)("br"),(0,u._)("br")],-1))),tu=["src"],eu=s((()=>(0,u._)("br",null,null,-1))),su={class:"main-content"},ru=s((()=>(0,u._)("p",null,"Gitのコマンド基本的な操作と考え方を学びましょう。",-1))),au=s((()=>(0,u._)("p",null,"まずはどういったものなのか図と照らし合わせながら覚えていきましょう！",-1))),_u=s((()=>(0,u._)("p",null,[(0,u.Uk)(" 皆さんがこれから学ぶ「コマンドライン」について概要を理解しましょう!"),(0,u._)("br")],-1))),bu=s((()=>(0,u._)("br",null,null,-1))),cu=s((()=>(0,u._)("p",null,[(0,u.Uk)(" ・分散型バージョン管理システム。"),(0,u._)("br"),(0,u.Uk)(" コンピュータ上のファイルに発生した変更を記録し、履歴を管理してくれる便利なツールになります。 "),(0,u._)("br"),(0,u._)("br"),(0,u.Uk)(" ではGitというのは具体的にどのように使うものなのか深掘りしていきましょう! ")],-1))),mu=s((()=>(0,u._)("br",null,null,-1))),ou=s((()=>(0,u._)("p",null,[(0,u.Uk)(" 例えば、この様にフォルダの中に3つのファイルがあるとしましょう。"),(0,u._)("br"),(0,u._)("br"),(0,u.Uk)(" これらのファイルの作業を行うときすべてAさんという人だけで行うとするととても時間がかかってしまいます。"),(0,u._)("br"),(0,u.Uk)(" そのため、BさんやCさんなどを入れて分担作業して作業する方が効率的になります。"),(0,u._)("br"),(0,u._)("br"),(0,u.Uk)(" Gitはその管理をしやすくするツールだと覚えておきましょう。"),(0,u._)("br")],-1))),gu=s((()=>(0,u._)("br",null,null,-1))),pu=["src"],du=s((()=>(0,u._)("br",null,null,-1))),ku=s((()=>(0,u._)("p",null,[(0,u.Uk)(" Gitを使えるように準備をしましょう。"),(0,u._)("br"),(0,u.Uk)(" まずはGitHubというサイトで新規登録を行いましょう。"),(0,u._)("br"),(0,u._)("br")],-1))),hu=s((()=>(0,u._)("div",{class:"download"},[(0,u._)("a",{class:"download-link",href:"https://github.com/"},"GitHubで新規登録を行う"),(0,u._)("br"),(0,u._)("br"),(0,u._)("br"),(0,u._)("br")],-1))),Uu=s((()=>(0,u._)("p",null,[(0,u.Uk)(" 新規登録をおこなったら初期設定をしましょう。"),(0,u._)("br"),(0,u.Uk)(" このコマンドはGitHubアカウントを変えない限り変えることはなくほとんど変えることはないのでので覚えなくても大丈夫です。"),(0,u._)("br"),(0,u._)("br"),(0,u.Uk)(" ①"),(0,u._)("br"),(0,u.Uk)(" 「環境構築やインストール」でインストールした「ターミナル」を開きましょう。 開くとこのような画面になります。 ")],-1))),wu=s((()=>(0,u._)("br",null,null,-1))),Pu=["src"],fu=s((()=>(0,u._)("br",null,null,-1))),vu=s((()=>(0,u._)("p",null,[(0,u.Uk)(" ②"),(0,u._)("br"),(0,u.Uk)(" 開いたらCドライブに移動しましょう。"),(0,u._)("br"),(0,u.Uk)(" 移動したらユーザー名とメールアドレスを設定しましょう。"),(0,u._)("br"),(0,u.Uk)(" 以下の画像のようにすべて入力して実行しましょう。"),(0,u._)("br"),(0,u._)("br")],-1))),Cu=["src"],Wu=s((()=>(0,u._)("br",null,null,-1))),Mu=s((()=>(0,u._)("p",null,[(0,u.Uk)(" 初期設定は以上で完了です。"),(0,u._)("br"),(0,u._)("br")],-1))),Tu=s((()=>(0,u._)("p",null,[(0,u._)("br"),(0,u.Uk)(" では今回Gitを学習するための練習フォルダとファイルを作成しましょう。"),(0,u._)("br"),(0,u._)("br"),(0,u.Uk)(" ③"),(0,u._)("br"),(0,u.Uk)(" Cドライブに以下のフォルダを作成してください。"),(0,u._)("br"),(0,u.Uk)(" 作成したらそのフォルダに移動してテキストファイルを作成しましょう。"),(0,u._)("br"),(0,u.Uk)(" エクスプローラで作成したフォルダの「git-practice」を確認すると以下のようにテキストファイルが作成されています。"),(0,u._)("br")],-1))),Gu=s((()=>(0,u._)("br",null,null,-1))),xu=["src"],Hu=s((()=>(0,u._)("br",null,null,-1))),Su=["src"],Ou=s((()=>(0,u._)("br",null,null,-1))),Zu=s((()=>(0,u._)("br",null,null,-1))),Lu=s((()=>(0,u._)("br",null,null,-1))),yu=s((()=>(0,u._)("br",null,null,-1))),Iu=s((()=>(0,u._)("br",null,null,-1))),Du=s((()=>(0,u._)("br",null,null,-1))),Fu=s((()=>(0,u._)("br",null,null,-1))),Ku=s((()=>(0,u._)("br",null,null,-1))),Ru=s((()=>(0,u._)("br",null,null,-1))),zu=s((()=>(0,u._)("br",null,null,-1))),Bu=s((()=>(0,u._)("br",null,null,-1))),qu=s((()=>(0,u._)("br",null,null,-1))),Au=s((()=>(0,u._)("br",null,null,-1))),Nu=["src"],ju=s((()=>(0,u._)("br",null,null,-1))),Eu=s((()=>(0,u._)("p",null,[(0,u.Uk)(" ④"),(0,u._)("br"),(0,u.Uk)(" それではコマンドを入力しましょう。"),(0,u._)("br"),(0,u.Uk)(" 以下のようになればOKです。"),(0,u._)("br"),(0,u._)("br")],-1))),Ju=["src"],Qu=s((()=>(0,u._)("br",null,null,-1))),Vu=s((()=>(0,u._)("p",null,[(0,u.Uk)(" では自分のPC上で作成したファイルを他の人に共有できるようにウェブ上に共有場所を作成しましょう。"),(0,u._)("br"),(0,u._)("br"),(0,u.Uk)(" ⑤"),(0,u._)("br"),(0,u.Uk)(" 先ほど登録したGitHubを開きましょう。"),(0,u._)("br"),(0,u.Uk)(" その次に左にある「New」ボタンを押しましょう。"),(0,u._)("br"),(0,u._)("br")],-1))),Xu=["src"],Yu=s((()=>(0,u._)("br",null,null,-1))),$u=s((()=>(0,u._)("p",null,[(0,u.Uk)(" ⑥"),(0,u._)("br"),(0,u.Uk)(" 次に「Repository name」に「git-practice」と入力しましょう。"),(0,u._)("br"),(0,u.Uk)(" 「Description」は入力しなくても大丈夫です。"),(0,u._)("br"),(0,u.Uk)(" リポジトリのタイプは「public」を選択しましょう。"),(0,u._)("br"),(0,u._)("br"),(0,u.Uk)(" 下の残りの設定はそのままで「Create repository」を押しましょう。"),(0,u._)("br"),(0,u._)("br")],-1))),lt=["src"],nt=s((()=>(0,u._)("br",null,null,-1))),it=s((()=>(0,u._)("br",null,null,-1))),ut=s((()=>(0,u._)("br",null,null,-1))),tt=s((()=>(0,u._)("br",null,null,-1))),et=s((()=>(0,u._)("br",null,null,-1))),st=s((()=>(0,u._)("br",null,null,-1))),rt=s((()=>(0,u._)("br",null,null,-1))),at=["src"],_t=s((()=>(0,u._)("br",null,null,-1))),bt=s((()=>(0,u._)("p",null,[(0,u.Uk)(" まずは今の状態を確認しましょう。"),(0,u._)("br"),(0,u._)("br")],-1))),ct=["src"],mt=s((()=>(0,u._)("br",null,null,-1))),ot=s((()=>(0,u._)("br",null,null,-1))),gt=s((()=>(0,u._)("br",null,null,-1))),pt=s((()=>(0,u._)("br",null,null,-1))),dt=s((()=>(0,u._)("br",null,null,-1))),kt=s((()=>(0,u._)("br",null,null,-1))),ht=s((()=>(0,u._)("br",null,null,-1))),Ut=s((()=>(0,u._)("br",null,null,-1))),wt=s((()=>(0,u._)("br",null,null,-1))),Pt=s((()=>(0,u._)("br",null,null,-1))),ft=s((()=>(0,u._)("br",null,null,-1))),vt=s((()=>(0,u._)("br",null,null,-1))),Ct=s((()=>(0,u._)("br",null,null,-1))),Wt=s((()=>(0,u._)("br",null,null,-1))),Mt=s((()=>(0,u._)("br",null,null,-1))),Tt=s((()=>(0,u._)("br",null,null,-1))),Gt=s((()=>(0,u._)("br",null,null,-1))),xt=s((()=>(0,u._)("br",null,null,-1))),Ht=s((()=>(0,u._)("br",null,null,-1))),St=["src"],Ot=s((()=>(0,u._)("br",null,null,-1))),Zt=["src"],Lt=s((()=>(0,u._)("br",null,null,-1))),yt=s((()=>(0,u._)("br",null,null,-1))),It=s((()=>(0,u._)("br",null,null,-1))),Dt=s((()=>(0,u._)("br",null,null,-1))),Ft=s((()=>(0,u._)("br",null,null,-1))),Kt=s((()=>(0,u._)("br",null,null,-1))),Rt=s((()=>(0,u._)("br",null,null,-1))),zt=s((()=>(0,u._)("br",null,null,-1))),Bt=s((()=>(0,u._)("br",null,null,-1))),qt=s((()=>(0,u._)("br",null,null,-1))),At=s((()=>(0,u._)("br",null,null,-1))),Nt=s((()=>(0,u._)("br",null,null,-1))),jt=s((()=>(0,u._)("br",null,null,-1))),Et=s((()=>(0,u._)("br",null,null,-1))),Jt=s((()=>(0,u._)("br",null,null,-1))),Qt=s((()=>(0,u._)("br",null,null,-1))),Vt=s((()=>(0,u._)("br",null,null,-1))),Xt=["src"],Yt=s((()=>(0,u._)("br",null,null,-1))),$t=s((()=>(0,u._)("br",null,null,-1))),le=s((()=>(0,u._)("br",null,null,-1))),ne=s((()=>(0,u._)("br",null,null,-1))),ie=s((()=>(0,u._)("br",null,null,-1))),ue=s((()=>(0,u._)("br",null,null,-1))),te=s((()=>(0,u._)("br",null,null,-1))),ee=s((()=>(0,u._)("br",null,null,-1))),se=s((()=>(0,u._)("br",null,null,-1))),re=s((()=>(0,u._)("br",null,null,-1))),ae=["src"],_e=s((()=>(0,u._)("br",null,null,-1))),be=["src"],ce=s((()=>(0,u._)("br",null,null,-1))),me=s((()=>(0,u._)("br",null,null,-1))),oe=s((()=>(0,u._)("br",null,null,-1))),ge=s((()=>(0,u._)("br",null,null,-1))),pe=s((()=>(0,u._)("br",null,null,-1))),de=s((()=>(0,u._)("br",null,null,-1))),ke=s((()=>(0,u._)("br",null,null,-1))),he=s((()=>(0,u._)("br",null,null,-1))),Ue=s((()=>(0,u._)("br",null,null,-1))),we=s((()=>(0,u._)("br",null,null,-1))),Pe=s((()=>(0,u._)("br",null,null,-1))),fe=s((()=>(0,u._)("br",null,null,-1))),ve=s((()=>(0,u._)("br",null,null,-1))),Ce=s((()=>(0,u._)("br",null,null,-1))),We=s((()=>(0,u._)("br",null,null,-1))),Me=s((()=>(0,u._)("br",null,null,-1))),Te=["src"],Ge=s((()=>(0,u._)("br",null,null,-1))),xe=s((()=>(0,u._)("br",null,null,-1))),He=s((()=>(0,u._)("br",null,null,-1))),Se=s((()=>(0,u._)("br",null,null,-1))),Oe=s((()=>(0,u._)("br",null,null,-1))),Ze=s((()=>(0,u._)("br",null,null,-1))),Le=s((()=>(0,u._)("br",null,null,-1))),ye=s((()=>(0,u._)("br",null,null,-1))),Ie=s((()=>(0,u._)("br",null,null,-1))),De=s((()=>(0,u._)("br",null,null,-1))),Fe=["src"],Ke=s((()=>(0,u._)("br",null,null,-1))),Re=s((()=>(0,u._)("p",null,[(0,u.Uk)(" ⑫"),(0,u._)("br"),(0,u.Uk)(" ではGithubでアップロードできた確認してみましょう。"),(0,u._)("br"),(0,u.Uk)(" Githubのページを更新すると以下のようにテキストファイルがアップロードされています。"),(0,u._)("br"),(0,u._)("br")],-1))),ze=["src"],Be=s((()=>(0,u._)("br",null,null,-1))),qe=s((()=>(0,u._)("p",null,[(0,u.Uk)(" ではここまでの流れを図で覚えましょう。"),(0,u._)("br"),(0,u._)("br")],-1))),Ae=["src"],Ne=s((()=>(0,u._)("br",null,null,-1))),je=s((()=>(0,u._)("p",null,[(0,u.Uk)(" Gitの管理下に置かれた、実際に作業をしているディレクトリのことをワークツリーと呼びます。"),(0,u._)("br"),(0,u._)("br"),(0,u.Uk)(" このワークツリーで編集、追加したファイルやフォルダを「git add」コマンドを使い選択します。"),(0,u._)("br"),(0,u.Uk)(" この操作をステージングと呼び、選択したファイルはインデックスという箱で管理されます。"),(0,u._)("br"),(0,u.Uk)(" そして、このファイルをどのような理由で選択したのか記録(git commit)し、リモートリポジトリに共有します。(git push)。"),(0,u._)("br"),(0,u.Uk)(" この一連の流れは必ず覚えましょう。"),(0,u._)("br"),(0,u._)("br"),(0,u.Uk)(" また、この操作はファイルを編集したり追加するたびにリモートリポジトリに更新する必要があるので「git add」、「git commit」、「git push」を行いましょう。"),(0,u._)("br")],-1))),Ee=s((()=>(0,u._)("br",null,null,-1))),Je=s((()=>(0,u._)("br",null,null,-1))),Qe=s((()=>(0,u._)("br",null,null,-1))),Ve=s((()=>(0,u._)("br",null,null,-1))),Xe=s((()=>(0,u._)("br",null,null,-1))),Ye=s((()=>(0,u._)("br",null,null,-1))),$e=s((()=>(0,u._)("br",null,null,-1))),ls=s((()=>(0,u._)("br",null,null,-1))),ns=["src"],is=s((()=>(0,u._)("br",null,null,-1))),us=s((()=>(0,u._)("p",null,[(0,u.Uk)(" ⑭"),(0,u._)("br"),(0,u.Uk)(" gitのステータスを確認してみましょう。"),(0,u._)("br"),(0,u.Uk)(" これは追跡できていない新しいファイルがあることを意味しています。"),(0,u._)("br")],-1))),ts=s((()=>(0,u._)("br",null,null,-1))),es=["src"],ss=s((()=>(0,u._)("br",null,null,-1))),rs=s((()=>(0,u._)("p",null,[(0,u.Uk)(" ⑮"),(0,u._)("br"),(0,u.Uk)(" では次にエクスプローラから「sample.txt」を開きましょう。"),(0,u._)("br"),(0,u.Uk)(" 開いたら以下のように編集し、保存(ctrl + S)してください。"),(0,u._)("br")],-1))),as=s((()=>(0,u._)("br",null,null,-1))),_s=["src"],bs=s((()=>(0,u._)("br",null,null,-1))),cs=["src"],ms=s((()=>(0,u._)("br",null,null,-1))),os=s((()=>(0,u._)("p",null,[(0,u.Uk)(" ⑭"),(0,u._)("br"),(0,u.Uk)(" gitのステータスを確認してみましょう。"),(0,u._)("br"),(0,u.Uk)(" 赤色で「modified」という部分が増えました。"),(0,u._)("br"),(0,u.Uk)("これは編集(修正)はされたが「git add」ができていない事を意味しています。"),(0,u._)("br")],-1))),gs=s((()=>(0,u._)("br",null,null,-1))),ps=["src"],ds=s((()=>(0,u._)("br",null,null,-1))),ks=s((()=>(0,u._)("p",null,[(0,u.Uk)(" ⑮"),(0,u._)("br"),(0,u.Uk)(" では「git add .」を行った後にgitのステータスを確認してみましょう。"),(0,u._)("br"),(0,u.Uk)(" すると今度は緑色で「modified」という部分が増えました。これは編集(修正)はされたが「git commit」ができていない事を意味しています。"),(0,u._)("br")],-1))),hs=s((()=>(0,u._)("br",null,null,-1))),Us=["src"],ws=s((()=>(0,u._)("br",null,null,-1))),Ps=s((()=>(0,u._)("p",null,[(0,u.Uk)(" ⑯"),(0,u._)("br"),(0,u.Uk)(" では次に「git commit」を行った後にgitのステータスを確認してみましょう。"),(0,u._)("br"),(0,u.Uk)(" すると今度は白色で文章が表示されました。これは「git commit」まで終わり、コミット対象が無い事を意味しています。"),(0,u._)("br")],-1))),fs=s((()=>(0,u._)("br",null,null,-1))),vs=["src"],Cs=s((()=>(0,u._)("br",null,null,-1))),Ws=s((()=>(0,u._)("br",null,null,-1))),Ms=s((()=>(0,u._)("br",null,null,-1))),Ts=s((()=>(0,u._)("br",null,null,-1))),Gs=s((()=>(0,u._)("br",null,null,-1))),xs=s((()=>(0,u._)("br",null,null,-1))),Hs=s((()=>(0,u._)("br",null,null,-1))),Ss=s((()=>(0,u._)("br",null,null,-1))),Os=["src"],Zs=s((()=>(0,u._)("br",null,null,-1))),Ls=s((()=>(0,u._)("p",null,[(0,u.Uk)(" ⑱"),(0,u._)("br"),(0,u.Uk)(" 「git diff」コマンドを入力しましょう。"),(0,u._)("br"),(0,u.Uk)(" 緑色で書かれている部分は今回の修正内容です。赤色は修正前の内容です。"),(0,u._)("br")],-1))),ys=s((()=>(0,u._)("br",null,null,-1))),Is=["src"],Ds=s((()=>(0,u._)("br",null,null,-1))),Fs=s((()=>(0,u._)("p",null,[(0,u.Uk)(" ⑲"),(0,u._)("br"),(0,u.Uk)(" 差分が見れたところで「git add」と「git commit」を行いましょう。"),(0,u._)("br"),(0,u.Uk)(" 以下の画像のようになればOKです。"),(0,u._)("br")],-1))),Ks=s((()=>(0,u._)("br",null,null,-1))),Rs=["src"],zs=s((()=>(0,u._)("br",null,null,-1))),Bs=s((()=>(0,u._)("br",null,null,-1))),qs=s((()=>(0,u._)("br",null,null,-1))),As=s((()=>(0,u._)("br",null,null,-1))),Ns=s((()=>(0,u._)("br",null,null,-1))),js=s((()=>(0,u._)("br",null,null,-1))),Es=s((()=>(0,u._)("br",null,null,-1))),Js=s((()=>(0,u._)("br",null,null,-1))),Qs=s((()=>(0,u._)("br",null,null,-1))),Vs=s((()=>(0,u._)("br",null,null,-1))),Xs=s((()=>(0,u._)("br",null,null,-1))),Ys=["src"],$s=s((()=>(0,u._)("br",null,null,-1))),lr=s((()=>(0,u._)("p",null,[(0,u.Uk)(" ㉑"),(0,u._)("br"),(0,u.Uk)(" 最後にファイルを追加し、ファイルの中身を編集した情報を「git push」でアップロードしましょう。"),(0,u._)("br"),(0,u.Uk)(" これでlesson-1は終了です。"),(0,u._)("br"),(0,u._)("br")],-1))),nr=["src"],ir=s((()=>(0,u._)("br",null,null,-1))),ur={class:"side-content"},tr={class:"side-content"};function er(l,n,i,s,er,sr){const rr=(0,u.up)("Header"),ar=(0,u.up)("Spinner"),_r=(0,u.up)("Title"),br=(0,u.up)("Document"),cr=(0,u.up)("SubTitle"),mr=(0,u.up)("SectionTitle"),or=(0,u.up)("HighlightWord"),gr=(0,u.up)("Modal"),pr=(0,u.up)("TableOfContents"),dr=(0,u.up)("Footer");return(0,u.wg)(),(0,u.iD)("div",null,[(0,u.Wm)(rr),(0,u.Wm)(ar,{isLoading:s.isLoading},null,8,["isLoading"]),(0,u._)("button",{class:"change_component_button",onClick:n[0]||(n[0]=(...l)=>s.toggleOS&&s.toggleOS(...l))},(0,t.zw)(s.isWindows?"Macをお持ちの方はこちら":"Windowsをお持ちの方はこちら"),1),(0,u._)("div",r,[(0,u.wy)((0,u._)("div",a,[(0,u.Wm)(_r,{title:"Git 1 (Windowsの方)",id:"Title-w"}),(0,u.Wm)(br,null,{default:(0,u.w5)((()=>[_,b])),_:1}),(0,u.Wm)(cr,{subTitle:"1. Gitについて学ぶ",id:"subTitle1-w"}),(0,u.Wm)(br,null,{default:(0,u.w5)((()=>[(0,u.Wm)(mr,{sectionTitle:"1-1. Gitとは?",id:"sectionTitle1-1-w"}),c,m,(0,u.Wm)(or,{word:"Git"}),o,g])),_:1}),(0,u.Wm)(br,null,{default:(0,u.w5)((()=>[(0,u.Wm)(mr,{sectionTitle:"1-2. Gitの使い方",id:"sectionTitle1-2-w"}),p,d,(0,u._)("div",null,[(0,u._)("img",{onClick:n[1]||(n[1]=l=>s.openModal(s.imagePaths.win.solo)),src:s.imagePaths.win.solo,class:"powerpoint-image",alt:"solo"},null,8,k)]),h])),_:1}),(0,u.Wm)(cr,{subTitle:"2. Gitコマンドを覚える",id:"subTitle2-w"}),(0,u.Wm)(br,null,{default:(0,u.w5)((()=>[(0,u.Wm)(mr,{sectionTitle:"2-1. GitHubに登録する",id:"sectionTitle2-1-w"}),U,w,(0,u.Wm)(mr,{sectionTitle:"2-2. Gitの初期設定をする",id:"sectionTitle2-2-w"}),P,f,(0,u._)("div",null,[(0,u._)("img",{onClick:n[2]||(n[2]=l=>s.openModal(s.imagePaths.win.step1)),src:s.imagePaths.win.step1,class:"screen-image",alt:"git-bash-1"},null,8,v)]),C,W,(0,u._)("div",null,[(0,u._)("img",{onClick:n[3]||(n[3]=l=>s.openModal(s.imagePaths.win.step2)),src:s.imagePaths.win.step2,class:"screen-image",alt:"git-bash-2"},null,8,M)]),T,G,(0,u.Wm)(mr,{sectionTitle:"2-3. Gitを準備する",id:"sectionTitle2-3-w"}),x,H,(0,u._)("div",null,[(0,u._)("img",{onClick:n[4]||(n[4]=l=>s.openModal(s.imagePaths.win.step3)),src:s.imagePaths.win.step3,class:"screen-image",alt:"git-bash-3"},null,8,S)]),O,(0,u._)("div",null,[(0,u._)("img",{onClick:n[5]||(n[5]=l=>s.openModal(s.imagePaths.win.folder1)),src:s.imagePaths.win.folder1,class:"screen-image",alt:"folder1"},null,8,Z)]),L,(0,u._)("p",null,[(0,u.Uk)(" 作成した練習ファイルの中でGitを使えるようにしましょう。"),y,I,(0,u.Wm)(or,{word:"git init"}),D,(0,u.Uk)(" ・gitを使えるようにするコマンド。"),F,(0,u.Uk)(" ローカルリポジトリを新規に作成するという意味もあります。"),K,R,(0,u.Wm)(or,{word:"ローカルリポジトリ"}),z,(0,u.Uk)(" ・そのコマンドを入力したフォルダ内のファイルやフォルダを管理できる専用の倉庫。"),B,(0,u.Uk)(" この倉庫は自分のパソコン上で作られます。"),q,A,(0,u.Uk)(" 図で表すと以下のようになります。"),N,j]),(0,u._)("div",null,[(0,u._)("img",{onClick:n[6]||(n[6]=l=>s.openModal(s.imagePaths.win.init)),src:s.imagePaths.win.init,class:"screen-image",alt:"init"},null,8,E)]),J,Q,(0,u._)("div",null,[(0,u._)("img",{onClick:n[7]||(n[7]=l=>s.openModal(s.imagePaths.win.step4)),src:s.imagePaths.win.step4,class:"screen-image",alt:"git-bash-4"},null,8,V)]),X,(0,u.Wm)(mr,{sectionTitle:"2-4. 共有場所の準備と登録",id:"sectionTitle2-4-w"}),Y,(0,u._)("div",null,[(0,u._)("img",{onClick:n[8]||(n[8]=l=>s.openModal(s.imagePaths.win.github1)),src:s.imagePaths.win.github1,class:"screen-image",alt:"github-1"},null,8,$)]),ll,nl,(0,u._)("div",null,[(0,u._)("img",{onClick:n[9]||(n[9]=l=>s.openModal(s.imagePaths.win.github2)),src:s.imagePaths.win.github2,class:"screen-image",alt:"github-2"},null,8,il)]),ul,(0,u._)("p",null,[(0,u.Uk)(" このような画面になれば共有場所の作成は完了です。"),tl,(0,u.Uk)(" ではこの共有場所は何か覚えましょう。"),el,sl,(0,u.Wm)(or,{word:"リモートリポジトリ"}),rl,(0,u.Uk)(" ・ローカルリポジトリで管理したフォルダ内のファイルやフォルダを第三者に共有したり、管理ができるWeb上の倉庫。"),al,_l]),(0,u._)("div",null,[(0,u._)("img",{onClick:n[10]||(n[10]=l=>s.openModal(s.imagePaths.win.github3)),src:s.imagePaths.win.github3,class:"screen-image",alt:"github-3"},null,8,bl)]),cl,ml,(0,u._)("div",null,[(0,u._)("img",{onClick:n[11]||(n[11]=l=>s.openModal(s.imagePaths.win.state1)),src:s.imagePaths.win.state1,class:"screen-image",alt:"state-1"},null,8,ol)]),gl,(0,u._)("p",null,[(0,u.Uk)(" 画像にある問題を整理しましょう。"),pl,dl,(0,u.Uk)(" 「git init」で作成したローカルリポジトリに管理されているフォルダはまだ自分のPC上でしか見ることができません。"),kl,(0,u.Uk)(" そのため、リモートリポジトリにアップロードするためには登録が必要になります。"),hl,Ul,wl,(0,u.Uk)(" それでは登録のコマンドを覚えましょう。"),Pl,fl,(0,u.Wm)(or,{word:"git remote add リモートリポジトリ名 URL"}),vl,(0,u.Uk)(" ・リモートリポジトリを登録するコマンド。"),Cl,(0,u.Uk)(" ここで表記されている「リモートリポジトリ名」は、GitHubで作ったリモートリポジトリと通信するために必要なURLを簡単なキーワードにして指定することができます。"),Wl,(0,u.Uk)(" デフォルトではoriginという名前で設定することが多いです。"),Ml,Tl,(0,u.Uk)(" 名前を設定するために以下のような手順を踏みましょう。"),Gl,xl,(0,u.Uk)(" ⑦"),Hl,(0,u.Uk)(" 以下をコピーして実行しましょう。"),Sl,Ol]),(0,u._)("div",null,[(0,u._)("img",{onClick:n[12]||(n[12]=l=>s.openModal(s.imagePaths.win.github4)),src:s.imagePaths.win.github4,class:"screen-image",alt:"github-4"},null,8,Zl)]),Ll,(0,u._)("div",null,[(0,u._)("img",{onClick:n[13]||(n[13]=l=>s.openModal(s.imagePaths.win.step5)),src:s.imagePaths.win.step5,class:"screen-image",alt:"git-bash-5"},null,8,yl)]),Il,(0,u._)("p",null,[(0,u.Uk)(" 登録が完了しました。"),Dl,Fl,(0,u.Uk)(" ではGithub(リモートリポジトリ)上にアップロードしましょう！"),Kl,(0,u.Uk)(" (1) まだアップロード(共有)してない、またはアップロードしてない編集情報をフォルダやファイルを選択する。"),Rl,(0,u.Uk)(" (2) フォルダやファイルにどのような編集や追加をしたか記録をする"),zl,(0,u.Uk)(" (3) アップロード(共有)する"),Bl,ql,(0,u.Uk)(" ⑧"),Al,(0,u.Uk)(" ではアップロードするファイルを選択しましょう。"),Nl,jl,(0,u.Wm)(or,{word:"git add (フォルダ名)ファイル名"}),El,(0,u.Uk)(" ・登録したリモートリポジトリにアップロードするファイルを選択するコマンド。"),Jl,Ql,(0,u.Uk)(" ファイルやフォルダすべてを一括で選択する方法。"),Vl,(0,u.Uk)(" →"),(0,u.Wm)(or,{word:"git add ."}),Xl,Yl]),(0,u._)("div",null,[(0,u._)("img",{onClick:n[14]||(n[14]=l=>s.openModal(s.imagePaths.win.step6)),src:s.imagePaths.win.step6,class:"screen-image",alt:"git-bash-6"},null,8,$l)]),ln,(0,u._)("p",null,[(0,u.Uk)(" ⑨"),nn,(0,u.Uk)(" 次にフォルダやファイルにどのような編集や追加をしたか記録をしましょう。"),un,tn,(0,u.Wm)(or,{word:"git commit -m 'メッセージ'"}),en,(0,u.Uk)(" ・ファイルをaddコマンドで選択した理由は何か記録するコマンド。"),sn,(0,u.Uk)(" メッセージには「□□ファイルの○○を修正」、「△△ファイルの名前を変更」、「××ファイルの作成」などを記載しますが、今回は初めてなので「first commit」や「initialize commit」と入力しましょう。"),rn,an,(0,u.Uk)(" GitHubにあるコミットコマンドをコピーしコマンドを入力しましょう。"),_n,bn]),(0,u._)("div",null,[(0,u._)("img",{onClick:n[15]||(n[15]=l=>s.openModal(s.imagePaths.win.github5)),src:s.imagePaths.win.github5,class:"screen-image",alt:"github-5"},null,8,cn)]),mn,(0,u._)("div",null,[(0,u._)("img",{onClick:n[16]||(n[16]=l=>s.openModal(s.imagePaths.win.step7)),src:s.imagePaths.win.step7,class:"screen-image",alt:"git-bash-7"},null,8,on)]),gn,(0,u._)("p",null,[(0,u.Uk)(" ⑩"),pn,(0,u.Uk)(" 最後にアップロードをしましょう。"),dn,kn,(0,u.Wm)(or,{word:"git push リモートリポジトリ名 ローカルリポジトリ名"}),hn,(0,u.Uk)(" ・ローカルリポジトリからリモートリポジトリにファイルをアップロード(共有)するコマンド。"),Un,wn,(0,u.Uk)(" 先ほどリモートリポジトリ名は「origin」と設定しました。ではローカルリポジトリの名前は何かというと、「git bash」の黄色文字の右に「master」と書かれていましたが今回はローカルリポジトリの名前だと覚えましょう。"),Pn,fn,(0,u.Uk)(" 本来は別の意味があり、正確に言えば少し違いますが今はこの覚え方で大丈夫です。"),vn,Cn,(0,u.Uk)(" しかし、この「master」という単語は2021年6月7日以降GitHubでは使われなくなったデフォルト名になりました。"),Wn,(0,u.Uk)(" 現在は「main」という名前になっているため、これからgitでリモートリポジトリを作るときに「main」作られるように初期設定をしましょう。"),Mn,Tn,(0,u.Uk)(" 以下を入力して下さい。この設定は一回のみで大丈夫です。"),Gn,xn]),(0,u._)("div",null,[(0,u._)("img",{onClick:n[17]||(n[17]=l=>s.openModal(s.imagePaths.win.step8)),src:s.imagePaths.win.step8,class:"screen-image",alt:"git-bash-8"},null,8,Hn)]),Sn,(0,u._)("p",null,[(0,u.Uk)(" ⑪"),On,(0,u.Uk)(" それではアップロードコマンドを入力してください。"),Zn,Ln,(0,u.Uk)(" アップロードが1回目の場合、少しオプションをつける必要があるため以下を入力しましょう。"),yn,(0,u.Uk)(" →"),(0,u.Wm)(or,{word:"git push -u origin main"}),In,(0,u.Uk)(" 2回目以降のアップロードは「-u」のオプションは必要ありません。"),Dn,(0,u.Uk)(" また以下のように省略してアップロードすることも出来ます。"),Fn,(0,u.Uk)(" →"),(0,u.Wm)(or,{word:"git push"}),Kn,Rn]),(0,u._)("div",null,[(0,u._)("img",{onClick:n[18]||(n[18]=l=>s.openModal(s.imagePaths.win.step9)),src:s.imagePaths.win.step9,class:"screen-image",alt:"git-bash-9"},null,8,zn)]),Bn,qn,(0,u._)("div",null,[(0,u._)("img",{onClick:n[19]||(n[19]=l=>s.openModal(s.imagePaths.win.github6)),src:s.imagePaths.win.github6,class:"screen-image",alt:"github-6"},null,8,An)]),Nn,jn,(0,u._)("div",null,[(0,u._)("img",{onClick:n[20]||(n[20]=l=>s.openModal(s.imagePaths.win.state2)),src:s.imagePaths.win.state2,class:"screen-image",alt:"state-2"},null,8,En)]),Jn,Qn])),_:1}),(0,u.Wm)(cr,{subTitle:"3. ファイルの状態を確認する",id:"subTitle3-w"}),(0,u.Wm)(br,null,{default:(0,u.w5)((()=>[(0,u.Wm)(mr,{sectionTitle:"3-1. 変更したファイルの確認方法",id:"sectionTitle3-1-w"}),(0,u._)("p",null,[(0,u.Uk)(" 先ほどの一連の流れを行うと自分がadd,commitなどをしたのかわからなくなってしまうことがあります。"),Vn,(0,u.Uk)(" そのために必要なファイルの状態を確認するコマンドを学びましょう。"),Xn,Yn,(0,u.Wm)(or,{word:"git status"}),$n,(0,u.Uk)(" ・自分が変更したファイルの状況を確認できるコマンド。"),li,ni,(0,u.Uk)(" ⑬"),ii,(0,u.Uk)(" では新しいファイルをtouchコマンドで作成しましょう。 ")]),(0,u._)("div",null,[ui,(0,u._)("img",{onClick:n[21]||(n[21]=l=>s.openModal(s.imagePaths.win.step10)),src:s.imagePaths.win.step10,class:"screen-image",alt:"git-bash-10"},null,8,ti)]),ei,si,ri,(0,u._)("div",null,[(0,u._)("img",{onClick:n[22]||(n[22]=l=>s.openModal(s.imagePaths.win.step11)),src:s.imagePaths.win.step11,class:"screen-image",alt:"git-bash-11"},null,8,ai)]),_i,bi,ci,(0,u._)("div",null,[(0,u._)("img",{onClick:n[23]||(n[23]=l=>s.openModal(s.imagePaths.win.folder2)),src:s.imagePaths.win.folder2,class:"screen-image",alt:"folder-2"},null,8,mi)]),oi,(0,u._)("div",null,[(0,u._)("img",{onClick:n[24]||(n[24]=l=>s.openModal(s.imagePaths.win.memo1)),src:s.imagePaths.win.memo1,class:"screen-image",alt:"memo-1"},null,8,gi)]),pi,di,ki,(0,u._)("div",null,[(0,u._)("img",{onClick:n[25]||(n[25]=l=>s.openModal(s.imagePaths.win.step12)),src:s.imagePaths.win.step12,class:"screen-image",alt:"git-bash-12"},null,8,hi)]),Ui,wi,Pi,(0,u._)("div",null,[(0,u._)("img",{onClick:n[26]||(n[26]=l=>s.openModal(s.imagePaths.win.step13)),src:s.imagePaths.win.step13,class:"screen-image",alt:"git-bash-13"},null,8,fi)]),vi,Ci,Wi,(0,u._)("div",null,[(0,u._)("img",{onClick:n[27]||(n[27]=l=>s.openModal(s.imagePaths.win.step14)),src:s.imagePaths.win.step14,class:"screen-image",alt:"git-bash-14"},null,8,Mi)]),Ti,(0,u._)("p",null,[(0,u.Uk)(" 次にファイルの中身を変えた履歴を確認したいは以下のコマンド使います。"),Gi,xi,(0,u.Wm)(or,{word:"git diff"}),Hi,(0,u.Uk)(" ・自分が変更したファイルの差分が見れるコマンド。"),Si,Oi,(0,u.Uk)(" ⑰"),Zi,(0,u.Uk)(" 先ほど記載した「sample.txt」を開き、以下のように内容を変更し保存しましょう。 ")]),Li,(0,u._)("div",null,[(0,u._)("img",{onClick:n[28]||(n[28]=l=>s.openModal(s.imagePaths.win.memo2)),src:s.imagePaths.win.memo2,class:"screen-image",alt:"memo-2"},null,8,yi)]),Ii,Di,Fi,(0,u._)("div",null,[(0,u._)("img",{onClick:n[29]||(n[29]=l=>s.openModal(s.imagePaths.win.step15)),src:s.imagePaths.win.step15,class:"screen-image",alt:"git-bash-15"},null,8,Ki)]),Ri,zi,Bi,(0,u._)("div",null,[(0,u._)("img",{onClick:n[30]||(n[30]=l=>s.openModal(s.imagePaths.win.step16)),src:s.imagePaths.win.step16,class:"screen-image",alt:"git-bash-16"},null,8,qi)]),Ai,(0,u._)("p",null,[(0,u.Uk)(" 最後にコミット履歴を確認したい場合は以下のコマンド使います。"),Ni,ji,(0,u.Wm)(or,{word:"git log"}),Ei,(0,u.Uk)(" ・コミット履歴を確認できるコマンド。"),Ji,(0,u.Uk)(" →"),(0,u.Wm)(or,{word:"git log -p"}),Qi,(0,u.Uk)(" 「git diff」と同じようなコマンドになるのでこの書き方も覚えておきましょう。"),Vi,Xi,(0,u.Uk)(" ⑳"),Yi,(0,u.Uk)(" それではコマンドを入力しましょう。以下の画像のようにコミット履歴が見られればOKです。"),$i]),lu,(0,u._)("div",null,[(0,u._)("img",{onClick:n[31]||(n[31]=l=>s.openModal(s.imagePaths.win.step17)),src:s.imagePaths.win.step17,class:"screen-image",alt:"git-bash-17"},null,8,nu)]),iu,uu,(0,u._)("div",null,[(0,u._)("img",{onClick:n[32]||(n[32]=l=>s.openModal(s.imagePaths.win.step18)),src:s.imagePaths.win.step18,class:"screen-image",alt:"git-bash-18"},null,8,tu)]),eu])),_:1}),(0,u.Wm)(gr,{selectedImage:s.selectedImage,showModal:s.isModalOpen,onCloseModal:n[33]||(n[33]=l=>s.isModalOpen=!1)},null,8,["selectedImage","showModal"])],512),[[e.F8,s.isWindows]]),(0,u.wy)((0,u._)("div",su,[(0,u.Wm)(_r,{title:"Git 1 (Macの方)",id:"Title-m"}),(0,u.Wm)(br,null,{default:(0,u.w5)((()=>[ru,au])),_:1}),(0,u.Wm)(cr,{subTitle:"1. Gitについて学ぶ",id:"subTitle1-m"}),(0,u.Wm)(br,null,{default:(0,u.w5)((()=>[(0,u.Wm)(mr,{sectionTitle:"1-1. Gitとは?",id:"sectionTitle1-1-m"}),_u,bu,(0,u.Wm)(or,{word:"Git"}),cu,mu])),_:1}),(0,u.Wm)(br,null,{default:(0,u.w5)((()=>[(0,u.Wm)(mr,{sectionTitle:"1-2. Gitの使い方",id:"sectionTitle1-2-m"}),ou,gu,(0,u._)("div",null,[(0,u._)("img",{onClick:n[34]||(n[34]=l=>s.openModal(s.imagePaths.mac.solo)),src:s.imagePaths.mac.solo,class:"powerpoint-image",alt:"solo"},null,8,pu)]),du])),_:1}),(0,u.Wm)(cr,{subTitle:"2. Gitコマンドを覚える",id:"subTitle2-m"}),(0,u.Wm)(br,null,{default:(0,u.w5)((()=>[(0,u.Wm)(mr,{sectionTitle:"2-1. GitHubに登録する",id:"sectionTitle2-1-m"}),ku,hu,(0,u.Wm)(mr,{sectionTitle:"2-2. Gitの初期設定をする",id:"sectionTitle2-2-m"}),Uu,wu,(0,u._)("div",null,[(0,u._)("img",{onClick:n[35]||(n[35]=l=>s.openModal(s.imagePaths.mac.step1)),src:s.imagePaths.mac.step1,class:"screen-image",alt:"git-bash-1"},null,8,Pu)]),fu,vu,(0,u._)("div",null,[(0,u._)("img",{onClick:n[36]||(n[36]=l=>s.openModal(s.imagePaths.mac.step2)),src:s.imagePaths.mac.step2,class:"screen-image",alt:"git-bash-2"},null,8,Cu)]),Wu,Mu,(0,u.Wm)(mr,{sectionTitle:"2-3. Gitを準備する",id:"sectionTitle2-3-m"}),Tu,Gu,(0,u._)("div",null,[(0,u._)("img",{onClick:n[37]||(n[37]=l=>s.openModal(s.imagePaths.mac.step3)),src:s.imagePaths.mac.step3,class:"screen-image",alt:"git-bash-3"},null,8,xu)]),Hu,(0,u._)("div",null,[(0,u._)("img",{onClick:n[38]||(n[38]=l=>s.openModal(s.imagePaths.mac.folder1)),src:s.imagePaths.mac.folder1,class:"screen-image",alt:"folder1"},null,8,Su)]),Ou,(0,u._)("p",null,[(0,u.Uk)(" 作成した練習ファイルの中でGitを使えるようにしましょう。"),Zu,Lu,(0,u.Wm)(or,{word:"git init"}),yu,(0,u.Uk)(" ・gitを使えるようにするコマンド。"),Iu,(0,u.Uk)(" ローカルリポジトリを新規に作成するという意味もあります。"),Du,Fu,(0,u.Wm)(or,{word:"ローカルリポジトリ"}),Ku,(0,u.Uk)(" ・そのコマンドを入力したフォルダ内のファイルやフォルダを管理できる専用の倉庫。"),Ru,(0,u.Uk)(" この倉庫は自分のパソコン上で作られます。"),zu,Bu,(0,u.Uk)(" 図で表すと以下のようになります。"),qu,Au]),(0,u._)("div",null,[(0,u._)("img",{onClick:n[39]||(n[39]=l=>s.openModal(s.imagePaths.mac.init)),src:s.imagePaths.mac.init,class:"screen-image",alt:"init"},null,8,Nu)]),ju,Eu,(0,u._)("div",null,[(0,u._)("img",{onClick:n[40]||(n[40]=l=>s.openModal(s.imagePaths.mac.step4)),src:s.imagePaths.mac.step4,class:"screen-image",alt:"git-bash-4"},null,8,Ju)]),Qu,(0,u.Wm)(mr,{sectionTitle:"2-4. 共有場所の準備と登録",id:"sectionTitle2-4-m"}),Vu,(0,u._)("div",null,[(0,u._)("img",{onClick:n[41]||(n[41]=l=>s.openModal(s.imagePaths.mac.github1)),src:s.imagePaths.mac.github1,class:"screen-image",alt:"github-1"},null,8,Xu)]),Yu,$u,(0,u._)("div",null,[(0,u._)("img",{onClick:n[42]||(n[42]=l=>s.openModal(s.imagePaths.mac.github2)),src:s.imagePaths.mac.github2,class:"screen-image",alt:"github-2"},null,8,lt)]),nt,(0,u._)("p",null,[(0,u.Uk)(" このような画面になれば共有場所の作成は完了です。"),it,(0,u.Uk)(" ではこの共有場所は何か覚えましょう。"),ut,tt,(0,u.Wm)(or,{word:"リモートリポジトリ"}),et,(0,u.Uk)(" ・ローカルリポジトリで管理したフォルダ内のファイルやフォルダを第三者に共有したり、管理ができるWeb上の倉庫。"),st,rt]),(0,u._)("div",null,[(0,u._)("img",{onClick:n[43]||(n[43]=l=>s.openModal(s.imagePaths.mac.github3)),src:s.imagePaths.mac.github3,class:"screen-image",alt:"github-3"},null,8,at)]),_t,bt,(0,u._)("div",null,[(0,u._)("img",{onClick:n[44]||(n[44]=l=>s.openModal(s.imagePaths.mac.state1)),src:s.imagePaths.mac.state1,class:"screen-image",alt:"state-1"},null,8,ct)]),mt,(0,u._)("p",null,[(0,u.Uk)(" 画像にある問題を整理しましょう。"),ot,gt,(0,u.Uk)(" 「git init」で作成したローカルリポジトリに管理されているフォルダはまだ自分のPC上でしか見ることができません。"),pt,(0,u.Uk)(" そのため、リモートリポジトリにアップロードするためには登録が必要になります。"),dt,kt,ht,(0,u.Uk)(" それでは登録のコマンドを覚えましょう。"),Ut,wt,(0,u.Wm)(or,{word:"git remote add リモートリポジトリ名 URL"}),Pt,(0,u.Uk)(" ・リモートリポジトリを登録するコマンド。"),ft,(0,u.Uk)(" ここで表記されている「リモートリポジトリ名」は、GitHubで作ったリモートリポジトリと通信するために必要なURLを簡単なキーワードにして指定することができます。"),vt,(0,u.Uk)(" デフォルトではoriginという名前で設定することが多いです。"),Ct,Wt,(0,u.Uk)(" 名前を設定するために以下のような手順を踏みましょう。"),Mt,Tt,(0,u.Uk)(" ⑦"),Gt,(0,u.Uk)(" 以下をコピーして実行しましょう。"),xt,Ht]),(0,u._)("div",null,[(0,u._)("img",{onClick:n[45]||(n[45]=l=>s.openModal(s.imagePaths.mac.github4)),src:s.imagePaths.mac.github4,class:"screen-image",alt:"github-4"},null,8,St)]),Ot,(0,u._)("div",null,[(0,u._)("img",{onClick:n[46]||(n[46]=l=>s.openModal(s.imagePaths.mac.step5)),src:s.imagePaths.mac.step5,class:"screen-image",alt:"git-bash-5"},null,8,Zt)]),Lt,(0,u._)("p",null,[(0,u.Uk)(" 登録が完了しました。"),yt,It,(0,u.Uk)(" ではGithub(リモートリポジトリ)上にアップロードしましょう！"),Dt,(0,u.Uk)(" (1) まだアップロード(共有)してない、またはアップロードしてない編集情報をフォルダやファイルを選択する。"),Ft,(0,u.Uk)(" (2) フォルダやファイルにどのような編集や追加をしたか記録をする"),Kt,(0,u.Uk)(" (3) アップロード(共有)する"),Rt,zt,(0,u.Uk)(" ⑧"),Bt,(0,u.Uk)(" ではアップロードするファイルを選択しましょう。"),qt,At,(0,u.Wm)(or,{word:"git add (フォルダ名)ファイル名"}),Nt,(0,u.Uk)(" ・登録したリモートリポジトリにアップロードするファイルを選択するコマンド。"),jt,Et,(0,u.Uk)(" ファイルやフォルダすべてを一括で選択する方法。"),Jt,(0,u.Uk)(" →"),(0,u.Wm)(or,{word:"git add ."}),Qt,Vt]),(0,u._)("div",null,[(0,u._)("img",{onClick:n[47]||(n[47]=l=>s.openModal(s.imagePaths.mac.step6)),src:s.imagePaths.mac.step6,class:"screen-image",alt:"git-bash-6"},null,8,Xt)]),Yt,(0,u._)("p",null,[(0,u.Uk)(" ⑨"),$t,(0,u.Uk)(" 次にフォルダやファイルにどのような編集や追加をしたか記録をしましょう。"),le,ne,(0,u.Wm)(or,{word:"git commit -m 'メッセージ'"}),ie,(0,u.Uk)(" ・ファイルをaddコマンドで選択した理由は何か記録するコマンド。"),ue,(0,u.Uk)(" メッセージには「□□ファイルの○○を修正」、「△△ファイルの名前を変更」、「××ファイルの作成」などを記載しますが、今回は初めてなので「first commit」や「initialize commit」と入力しましょう。"),te,ee,(0,u.Uk)(" GitHubにあるコミットコマンドをコピーしコマンドを入力しましょう。"),se,re]),(0,u._)("div",null,[(0,u._)("img",{onClick:n[48]||(n[48]=l=>s.openModal(s.imagePaths.mac.github5)),src:s.imagePaths.mac.github5,class:"screen-image",alt:"github-5"},null,8,ae)]),_e,(0,u._)("div",null,[(0,u._)("img",{onClick:n[49]||(n[49]=l=>s.openModal(s.imagePaths.mac.step7)),src:s.imagePaths.mac.step7,class:"screen-image",alt:"git-bash-7"},null,8,be)]),ce,(0,u._)("p",null,[(0,u.Uk)(" ⑩"),me,(0,u.Uk)(" 最後にアップロードをしましょう。"),oe,ge,(0,u.Wm)(or,{word:"git push リモートリポジトリ名 ローカルリポジトリ名"}),pe,(0,u.Uk)(" ・ローカルリポジトリからリモートリポジトリにファイルをアップロード(共有)するコマンド。"),de,ke,(0,u.Uk)(" 先ほどリモートリポジトリ名は「origin」と設定しました。ではローカルリポジトリの名前は何かというと、「ターミナル」の黄色文字の右に「master」と書かれていましたが今回はローカルリポジトリの名前だと覚えましょう。"),he,Ue,(0,u.Uk)(" 本来は別の意味があり、正確に言えば少し違いますが今はこの覚え方で大丈夫です。"),we,Pe,(0,u.Uk)(" しかし、この「master」という単語は2021年6月7日以降GitHubでは使われなくなったデフォルト名になりました。"),fe,(0,u.Uk)(" 現在は「main」という名前になっているため、これからgitでリモートリポジトリを作るときに「main」作られるように初期設定をしましょう。"),ve,Ce,(0,u.Uk)(" 以下を入力して下さい。この設定は一回のみで大丈夫です。"),We,Me]),(0,u._)("div",null,[(0,u._)("img",{onClick:n[50]||(n[50]=l=>s.openModal(s.imagePaths.mac.step8)),src:s.imagePaths.mac.step8,class:"screen-image",alt:"git-bash-8"},null,8,Te)]),Ge,(0,u._)("p",null,[(0,u.Uk)(" ⑪"),xe,(0,u.Uk)(" それではアップロードコマンドを入力してください。"),He,Se,(0,u.Uk)(" アップロードが1回目の場合、少しオプションをつける必要があるため以下を入力しましょう。"),Oe,(0,u.Uk)(" →"),(0,u.Wm)(or,{word:"git push -u origin main"}),Ze,(0,u.Uk)(" 2回目以降のアップロードは「-u」のオプションは必要ありません。"),Le,(0,u.Uk)(" また以下のように省略してアップロードすることも出来ます。"),ye,(0,u.Uk)(" →"),(0,u.Wm)(or,{word:"git push"}),Ie,De]),(0,u._)("div",null,[(0,u._)("img",{onClick:n[51]||(n[51]=l=>s.openModal(s.imagePaths.mac.step9)),src:s.imagePaths.mac.step9,class:"screen-image",alt:"git-bash-9"},null,8,Fe)]),Ke,Re,(0,u._)("div",null,[(0,u._)("img",{onClick:n[52]||(n[52]=l=>s.openModal(s.imagePaths.mac.github6)),src:s.imagePaths.mac.github6,class:"screen-image",alt:"github-6"},null,8,ze)]),Be,qe,(0,u._)("div",null,[(0,u._)("img",{onClick:n[53]||(n[53]=l=>s.openModal(s.imagePaths.mac.state2)),src:s.imagePaths.mac.state2,class:"screen-image",alt:"state-2"},null,8,Ae)]),Ne,je])),_:1}),(0,u.Wm)(cr,{subTitle:"3. ファイルの状態を確認する",id:"subTitle3-m"}),(0,u.Wm)(br,null,{default:(0,u.w5)((()=>[(0,u.Wm)(mr,{sectionTitle:"3-1. 変更したファイルの確認方法",id:"sectionTitle3-1-m"}),(0,u._)("p",null,[(0,u.Uk)(" 先ほどの一連の流れを行うと自分がadd,commitなどをしたのかわからなくなってしまうことがあります。"),Ee,(0,u.Uk)(" そのために必要なファイルの状態を確認するコマンドを学びましょう。"),Je,Qe,(0,u.Wm)(or,{word:"git status"}),Ve,(0,u.Uk)(" ・自分が変更したファイルの状況を確認できるコマンド。"),Xe,Ye,(0,u.Uk)(" ⑬"),$e,(0,u.Uk)(" では新しいファイルをtouchコマンドで作成しましょう。 ")]),(0,u._)("div",null,[ls,(0,u._)("img",{onClick:n[54]||(n[54]=l=>s.openModal(s.imagePaths.mac.step10)),src:s.imagePaths.mac.step10,class:"screen-image",alt:"git-bash-10"},null,8,ns)]),is,us,ts,(0,u._)("div",null,[(0,u._)("img",{onClick:n[55]||(n[55]=l=>s.openModal(s.imagePaths.mac.step11)),src:s.imagePaths.mac.step11,class:"screen-image",alt:"git-bash-11"},null,8,es)]),ss,rs,as,(0,u._)("div",null,[(0,u._)("img",{onClick:n[56]||(n[56]=l=>s.openModal(s.imagePaths.mac.folder2)),src:s.imagePaths.mac.folder2,class:"screen-image",alt:"folder-2"},null,8,_s)]),bs,(0,u._)("div",null,[(0,u._)("img",{onClick:n[57]||(n[57]=l=>s.openModal(s.imagePaths.mac.memo1)),src:s.imagePaths.mac.memo1,class:"screen-image",alt:"memo-1"},null,8,cs)]),ms,os,gs,(0,u._)("div",null,[(0,u._)("img",{onClick:n[58]||(n[58]=l=>s.openModal(s.imagePaths.mac.step12)),src:s.imagePaths.mac.step12,class:"screen-image",alt:"git-bash-12"},null,8,ps)]),ds,ks,hs,(0,u._)("div",null,[(0,u._)("img",{onClick:n[59]||(n[59]=l=>s.openModal(s.imagePaths.mac.step13)),src:s.imagePaths.mac.step13,class:"screen-image",alt:"git-bash-13"},null,8,Us)]),ws,Ps,fs,(0,u._)("div",null,[(0,u._)("img",{onClick:n[60]||(n[60]=l=>s.openModal(s.imagePaths.mac.step14)),src:s.imagePaths.mac.step14,class:"screen-image",alt:"git-bash-14"},null,8,vs)]),Cs,(0,u._)("p",null,[(0,u.Uk)(" 次にファイルの中身を変えた履歴を確認したいは以下のコマンド使います。"),Ws,Ms,(0,u.Wm)(or,{word:"git diff"}),Ts,(0,u.Uk)(" ・自分が変更したファイルの差分が見れるコマンド。"),Gs,xs,(0,u.Uk)(" ⑰"),Hs,(0,u.Uk)(" 先ほど記載した「sample.txt」を開き、以下のように内容を変更し保存しましょう。 ")]),Ss,(0,u._)("div",null,[(0,u._)("img",{onClick:n[61]||(n[61]=l=>s.openModal(s.imagePaths.mac.memo2)),src:s.imagePaths.mac.memo2,class:"screen-image",alt:"memo-2"},null,8,Os)]),Zs,Ls,ys,(0,u._)("div",null,[(0,u._)("img",{onClick:n[62]||(n[62]=l=>s.openModal(s.imagePaths.mac.step15)),src:s.imagePaths.mac.step15,class:"screen-image",alt:"git-bash-15"},null,8,Is)]),Ds,Fs,Ks,(0,u._)("div",null,[(0,u._)("img",{onClick:n[63]||(n[63]=l=>s.openModal(s.imagePaths.mac.step16)),src:s.imagePaths.mac.step16,class:"screen-image",alt:"git-bash-16"},null,8,Rs)]),zs,(0,u._)("p",null,[(0,u.Uk)(" 最後にコミット履歴を確認したい場合は以下のコマンド使います。"),Bs,qs,(0,u.Wm)(or,{word:"git log"}),As,(0,u.Uk)(" ・コミット履歴を確認できるコマンド。"),Ns,(0,u.Uk)(" →"),(0,u.Wm)(or,{word:"git log -p"}),js,(0,u.Uk)(" 「git diff」と同じようなコマンドになるのでこの書き方も覚えておきましょう。"),Es,Js,(0,u.Uk)(" ⑳"),Qs,(0,u.Uk)(" それではコマンドを入力しましょう。以下の画像のようにコミット履歴が見られればOKです。"),Vs]),Xs,(0,u._)("div",null,[(0,u._)("img",{onClick:n[64]||(n[64]=l=>s.openModal(s.imagePaths.mac.step17)),src:s.imagePaths.mac.step17,class:"screen-image",alt:"git-bash-17"},null,8,Ys)]),$s,lr,(0,u._)("div",null,[(0,u._)("img",{onClick:n[65]||(n[65]=l=>s.openModal(s.imagePaths.mac.step18)),src:s.imagePaths.mac.step18,class:"screen-image",alt:"git-bash-18"},null,8,nr)]),ir])),_:1}),(0,u.Wm)(gr,{selectedImage:s.selectedImage,showModal:s.isModalOpen,onCloseModal:n[66]||(n[66]=l=>s.isModalOpen=!1)},null,8,["selectedImage","showModal"])],512),[[e.F8,!s.isWindows]]),(0,u.wy)((0,u._)("div",ur,[(0,u.Wm)(pr,{sections:s.windowsSections},null,8,["sections"])],512),[[e.F8,s.isWindows&&!s.isSmallScreen]]),(0,u.wy)((0,u._)("div",tr,[(0,u.Wm)(pr,{sections:s.macSections},null,8,["sections"])],512),[[e.F8,!s.isWindows&&!s.isSmallScreen]])]),(0,u.Wm)(dr)])}var sr=i(2262),rr=i(41605),ar=i(66187),_r=i(44216),br=i(1755),cr=i(67775),mr=i(14332),or=i(11593),gr=i(21996),pr=i(57672),dr=i(14534),kr={name:"CommandLine1",components:{Header:rr.Z,Footer:ar.Z,Title:_r.Z,SubTitle:br.Z,SectionTitle:cr.Z,HighlightWord:mr.Z,Document:or.Z,TableOfContents:gr.Z,Spinner:pr.Z,Modal:dr.Z},setup(){const l=(0,sr.iH)(!0),n=(0,sr.iH)(!1),t=(0,sr.iH)(!1),e=[{id:"Title-w",title:"Git 1 (Windowsの方)"},{id:"subTitle1-w",title:"  1. Gitについて学ぶ"},{id:"sectionTitle1-1-w",title:"    1-1. Gitとは?"},{id:"sectionTitle1-2-w",title:"    1-2. Gitの使い方"},{id:"subTitle2-w",title:"  2. Gitコマンドを覚える"},{id:"sectionTitle2-1-w",title:"    2-1. GitHubに登録する"},{id:"sectionTitle2-2-w",title:"    2-2. Gitの初期設定をする"},{id:"sectionTitle2-3-w",title:"    2-3. Gitを準備する"},{id:"sectionTitle2-4-w",title:"    2-4. 共有場所の準備と登録"},{id:"subTitle3-w",title:"  3. ファイルの状態を確認する"},{id:"sectionTitle3-1-w",title:"    3-1. 変更したファイルの確認方法"}],s=[{id:"Title-m",title:"Git 1 (Macの方)"},{id:"subTitle1-m",title:"  1. Gitについて学ぶ"},{id:"sectionTitle1-1-m",title:"    1-1. Gitとは?"},{id:"sectionTitle1-2-m",title:"    1-2. Gitの使い方"},{id:"subTitle2-m",title:"  2. Gitコマンドを覚える"},{id:"sectionTitle2-1-m",title:"    2-1. GitHubに登録する"},{id:"sectionTitle2-2-m",title:"    2-2. Gitの初期設定をする"},{id:"sectionTitle2-3-m",title:"    2-3. Gitを準備する"},{id:"sectionTitle2-4-m",title:"    2-4. 共有場所の準備と登録"},{id:"subTitle3-m",title:"  3. ファイルの状態を確認する"},{id:"sectionTitle3-1-m",title:"    3-1. 変更したファイルの確認方法"}],r=()=>{t.value=!0,setTimeout((()=>{t.value=!1,l.value=!l.value}),1e3)};(0,u.bv)((()=>{window.scrollTo(0,0)}));const a={win:{solo:i(66949),step1:i(84261),step2:i(23423),step3:i(86631),folder1:i(3231),init:i(80511),step4:i(85961),github1:i(99720),github2:i(63742),github3:i(33707),state1:i(29310),github4:i(29011),step5:i(56286),step6:i(13765),github5:i(1300),step7:i(73220),step8:i(77249),step9:i(31540),github6:i(98538),state2:i(28423),step10:i(15232),step11:i(50104),folder2:i(85116),memo1:i(31634),step12:i(52363),step13:i(16165),step14:i(57592),memo2:i(31634),step15:i(97928),step16:i(3226),step17:i(68984),step18:i(7046)},mac:{solo:i(66949),step1:i(84261),step2:i(23423),step3:i(86631),folder1:i(3231),init:i(80511),step4:i(85961),github1:i(99720),github2:i(63742),github3:i(33707),state1:i(29310),github4:i(29011),step5:i(56286),step6:i(13765),github5:i(1300),step7:i(73220),step8:i(77249),step9:i(31540),github6:i(98538),state2:i(28423),step10:i(15232),step11:i(50104),folder2:i(85116),memo1:i(31634),step12:i(52363),step13:i(16165),step14:i(57592),memo2:i(31634),step15:i(97928),step16:i(3226),step17:i(68984),step18:i(7046)}},_=(0,sr.iH)(!1),b=(0,sr.iH)(),c=l=>{_.value=!0,b.value=l};return{isWindows:l,isSmallScreen:n,isLoading:t,windowsSections:e,macSections:s,imagePaths:a,selectedImage:b,isModalOpen:_,toggleOS:r,openModal:c}}},hr=i(83744);const Ur=(0,hr.Z)(kr,[["render",er],["__scopeId","data-v-6005978a"]]);var wr=Ur},3231:function(l,n,i){l.exports=i.p+"img/folder-1.592d57f4.png"},85116:function(l,n,i){l.exports=i.p+"img/folder-2.2d864270.png"},84261:function(l,n,i){l.exports=i.p+"img/git-bash-1.47dde7ff.png"},15232:function(l,n,i){l.exports=i.p+"img/git-bash-10.7850d6ff.png"},50104:function(l,n,i){l.exports=i.p+"img/git-bash-11.2a252f08.png"},52363:function(l,n,i){l.exports=i.p+"img/git-bash-12.10cbd23f.png"},16165:function(l,n,i){l.exports=i.p+"img/git-bash-13.22ea7294.png"},57592:function(l,n,i){l.exports=i.p+"img/git-bash-14.a6990009.png"},97928:function(l,n,i){l.exports=i.p+"img/git-bash-15.973b43d2.png"},3226:function(l,n,i){l.exports=i.p+"img/git-bash-16.9c679dfc.png"},68984:function(l,n,i){l.exports=i.p+"img/git-bash-17.7dda6679.png"},7046:function(l,n,i){l.exports=i.p+"img/git-bash-18.3ff359c1.png"},23423:function(l,n,i){l.exports=i.p+"img/git-bash-2.61ee3b31.png"},86631:function(l,n,i){l.exports=i.p+"img/git-bash-3.2a62169b.png"},85961:function(l,n,i){l.exports=i.p+"img/git-bash-4.8136c759.png"},56286:function(l,n,i){l.exports=i.p+"img/git-bash-5.41dffb1a.png"},13765:function(l,n,i){l.exports=i.p+"img/git-bash-6.867c710d.png"},73220:function(l,n,i){l.exports=i.p+"img/git-bash-7.8749466b.png"},77249:function(l,n,i){l.exports=i.p+"img/git-bash-8.26d31efd.png"},31540:function(l,n,i){l.exports=i.p+"img/git-bash-9.a124c089.png"},80511:function(l,n,i){l.exports=i.p+"img/git-init.2d404443.png"},99720:function(l,n,i){l.exports=i.p+"img/github-1.e6ce2021.png"},63742:function(l,n,i){l.exports=i.p+"img/github-2.02780519.png"},33707:function(l,n,i){l.exports=i.p+"img/github-3.eeca54a1.png"},29011:function(l,n,i){l.exports=i.p+"img/github-4.ed029e13.png"},1300:function(l,n,i){l.exports=i.p+"img/github-5.92f88efe.png"},98538:function(l,n,i){l.exports=i.p+"img/github-6.ec9b0785.png"},31634:function(l,n,i){l.exports=i.p+"img/memo-1-w.5175ed47.png"},66949:function(l,n,i){l.exports=i.p+"img/solo.82386517.png"},29310:function(l,n,i){l.exports=i.p+"img/state-1.4a0db9c2.png"},28423:function(l,n,i){l.exports=i.p+"img/state-2.d2ad2ee3.png"}}]);
//# sourceMappingURL=533.d327718d.js.map